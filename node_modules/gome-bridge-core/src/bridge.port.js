/*
 * @Author: liuxiaocong 
 * @Date: 2017-07-19 20:34:15 
 * @Last Modified by: liuxiaocong
 * @Last Modified time: 2017-08-14 11:09:26
 */
// bridge 暴漏出的接口
// global Bridge
// import exec from './exec'
var exec = require('./exec')
let Bridge = {
        /*isLogin:function(success, fail) {
            // exec(success, null, "UtilsPlugin", "isLogin", []);
            exec(success, fail, "Login", "isLogin", []);
        },
        showToast:function(success, fail, args) {
            // exec(null, null, "UtilsPlugin", "showToast", [args]);
            exec(success, fail, "View", "toast", [args]);
        },
        // jumpExternalLink:function(args) {
        //     exec(null, null, "UtilsPlugin", "jumpExternalLink", [args]);
        // },
        showTitle:function(args) {
                    exec(null, null, "UtilsPlugin", "showTitle", [args]);
        },
        getMeasure:function(args) {
            exec(null, null, "UtilsPlugin", "getMeasure", [args]);
        },
        getAppEnvironment:function(success) {
            exec(success, null, "UtilsPlugin", "getAppEnvironment", []);
        },
        getAppVersion:function(success) {
            exec(success, null, "UtilsPlugin", "getAppVersion", []);
        },
        shareLink:function(args) {
            exec(null, null, "UtilsPlugin", "shareLink", [args]);
        },
        getAddressFourArea:function(success) {
            exec(success, null, "UtilsPlugin", "getAddressFourArea", []);
        },
        showNativeDialog:function(args, type) {
            exec(null, null, "UtilsPlugin", "showNativeDialog", [args,type]);
        },
        getUserInfo:function(success, fail) {
            exec(success, fail, "UtilsPlugin", "getUserInfo", []);
        },
        getFOne:function(success) {
            exec(success, null, "UtilsPlugin", "getFOne", []);
        },
        getNativeParams:function(success) {
            exec(success, null, "UtilsPlugin", "getNativeParams", []);
        },
        getConsigneeAddress:function(success, fail) {
            exec(success, fail, "UtilsPlugin", "getConsigneeAddress", []);
        },
        retrieveSData: function(ok, fail, args){
            exec(ok, fail, 'UtilsPlugin', 'retrieveSData', [args])
        },
        titleAction: function(ok, fail, args){
            exec(ok, fail, 'UtilsPlugin', 'titleAction', [args])
        },
        nativeFinish: function(ok, fail, args){
            exec(ok, fail, 'UtilsPlugin', 'nativeFinish',[args])
        },
        /*
            参数 {“type”:”tel”, “content”:”18605851210”}

            type 值 tel mailto  sms http 等
            content值 电话号码 邮箱地址 电话号码 uri  等
            回调只有 成功 或 失败 的状态，没有内容
        */
        /*openDeviceTool: function(ok, fail, args){
            exec(ok, fail, 'UtilsPlugin', 'openDeviceTool',[args])
        },
        //nativeRequest.js
        //自定义方法
        sendNativeRequest:function(addSuc,addFaild,args) {
            exec(addSuc,addFaild,"RequestPlugin","sendNativeRequest",[args]);
        },
        sendNativeLayoutRequest:function(addSuc,addFaild,args) {
            exec(addSuc,addFaild,"RequestPlugin","sendNativeLayoutRequest",[args]);
        },
        //nativeLogin.js
        jumpToNativeLogin:function(success, fail) {
            exec(success, fail, "LoginPlugin", "jumpToNativeLogin", []);
        },
        jumpToNativeLogout:function(success, fail) {
            exec(success, fail, "LoginPlugin", "jumpToNativeLogout", []);
        }*/
        isLogin:function(ok, fail) {
            exec(ok, fail, "Login", "isLogin", []);
        },
        login: function(ok, fail){
            exec(ok, fail, "Login", "showLoginView", []);
        },
        getUserInfo:function(ok, fail){
            exec(ok, fail, "Login", "getUserInfo", []);  
        },
        toast:function(ok, fail, args) {
            exec(ok, fail, "View", "toast", [args]);
        },
        callShareComp:function(ok, fail, args){
            exec(ok, fail, "Share", "showNativeShareComponent", [args]);
        },
        fetch: function(ok, fail, args){
            exec(ok, fail, "Network", "sendRequest", [args]);
        },
        popWindow:function(){
            exec(null, null, "Route", "close", []);
        },
        pushWindow:function(ok, fail, args){
            exec(ok, fail, "Route", "open", [args]);
        },
        setHeadBar:function(ok, fail, args){
            exec(ok, fail, "View", "initTitleBar", [args]);
        },
        getLocation:function(ok, fail){
            exec(ok,fail,"Location","getInfo",[])
        },
        getDeviceId:function(ok, fail){
            exec(ok,fail,"Device1","getInfo",[])
        },
        // add
        showLoadingComp:function(ok, fail,args){
            exec(ok, fail, "View", "showLoading", [args]);
        },
        hideLoadingComp:function(ok, fail){
            exec(ok, fail, "View", "hideLoading", []);
        },
        showErrorComp:function(ok,fail,args){
            exec(ok, fail, "View", "showErrorView", [args]);
        },
        hideErrorComp:function(ok, fail){
            exec(ok, fail, "View", "hideErrorView", []);
        }
    }
module.exports = Bridge
// export { Bridge }