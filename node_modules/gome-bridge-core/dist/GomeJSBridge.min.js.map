{"version":3,"sources":["webpack:///GomeJSBridge.min.js","webpack:///webpack/bootstrap 7a1cb23d4f5eb59a64aa","webpack:///./example/cordova.unit.less.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/buffer/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Buffer","require","_typeof","Symbol","iterator","obj","constructor","PLATFORM_VERSION_BUILD_LABEL","define","build","factory","localRequire","id","resultantId","charAt","slice","lastIndexOf","SEPARATOR","requireStack","inProgressModules","join","length","push","pop","remove","moduleMap","createEvent","type","data","event","document","initEvent","window","cordova","HTMLElement","Error","channel","platform","m_document_addEventListener","addEventListener","m_document_removeEventListener","removeEventListener","m_window_addEventListener","m_window_removeEventListener","documentEventHandlers","windowEventHandlers","evt","handler","capture","e","toLowerCase","subscribe","unsubscribe","version","platformVersion","platformId","addWindowEventHandler","create","addStickyDocumentEventHandler","createSticky","addDocumentEventHandler","removeWindowEventHandler","removeDocumentEventHandler","fireDocumentEvent","bNoDetach","fire","setTimeout","dispatchEvent","fireWindowEvent","callbackId","Math","floor","random","callbacks","callbackStatus","NO_RESULT","OK","CLASS_NOT_FOUND_EXCEPTION","ILLEGAL_ACCESS_EXCEPTION","INSTANTIATION_EXCEPTION","MALFORMED_URL_EXCEPTION","IO_EXCEPTION","INVALID_ACTION","JSON_EXCEPTION","ERROR","callbackSuccess","args","callbackFromNative","status","message","keepCallback","callbackError","isSuccess","callback","success","apply","fail","err","msg","console","log","nativeApi","this","_cordovaNative","currentApi","setPreferPrompt","value","set","exec","bridgeSecret","service","action","argsJson","prompt","JSON","stringify","setNativeToJsBridgeMode","retrieveJsMessages","fromOnlineEvent","uint8ToBase64","rawData","segment","numBytes","byteLength","output","table","b64_12bitTable","b64_6bit","base64","fromArrayBuffer","arrayBuffer","Uint8Array","toArrayBuffer","str","decodedStr","atob","toString","ArrayBuffer","array","len","charCodeAt","forceFunction","f","utils","nextGuid","Channel","sticky","handlers","state","fireArgs","numHandlers","onHasSubscribersChange","h","j","deviceReadyChannelsArray","deviceReadyChannelsMap","waitForInitialization","feature","func","guid","observer_guid","close","Array","arguments","toCall","item","androidExec","undefined","jsToNativeBridgeMode","setJsToNativeBridgeMode","jsToNativeModes","JS_OBJECT","msgs","nativeApiProvider","PROMPT","messagesFromNative","nextTick","processMessages","pollOnceFromOnlineEvent","pollOnce","opt_fromOnlineEvent","pollingTimerFunc","pollEnabled","hookOnlineApis","proxyEvent","buildPayload","payload","payloadKind","multipartMessages","spaceIdx","indexOf","msgLen","multipartMessage","substr","parse","processMessage","firstChar","eval","nextSpaceIdx","payloadMessage","isProcessing","popMessageFromQueue","messageBatch","shift","unshift","nativeToJsModes","POLLING","LOAD_URL","ONLINE_EVENT","nativeToJsBridgeMode","resolvedPromise","Promise","resolve","fn","then","init","onNativeReady","mode","shouldBundleCommandJson","bridgeMode","XHR_WITH_PAYLOAD","XHR_OPTIONAL_PAYLOAD","payloadLength","commandQueue","massageArgsJsToNative","typeName","ret","forEach","arg","CDVType","massageMessageNativeToJs","stringToArrayBuffer","buffer","b64","convertMessageToArgsNativeToJs","messages","iOSExec","IFRAME_NAV","webkit","messageHandlers","postMessage","WK_WEBVIEW_BINDING","successCallback","failCallback","actionArgs","splitCommand","split","splice","command","isInContextOfEvalJs","pokeNativeViaXhr","execXhr","readyState","XMLHttpRequest","open","Date","vcHeaderValue","navigator","userAgent","setRequestHeader","requestCount","nativeFetchMessages","send","XHR_NO_PAYLOAD","IFRAME_HASH_NO_PAYLOAD","IFRAME_HASH_WITH_PAYLOAD","failSafeTimerId","clearTimeout","json","nativeCallback","nativeEvalAndFetch","logUnfiredChannels","arr","platformInitChannelsArray","onDeviceReady","onPause","onResume","onActivated","onDOMContentLoaded","_nativeReady","bootstrap","onCordovaReady","onMessageFromNative","system","match","val","context","params","Bridge","isLogin","ok","login","param","refresh","location","reload","getUserInfo","toast","callShareComp","fetch","popWindow","pushWindow","setHeadBar","getLocation","getDeviceId","showLoadingComp","hideLoadingComp","showErrorComp","hideErrorComp","webpackPolyfill","deprecate","paths","children","global","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","encodingOrOffset","allocUnsafe","from","TypeError","fromString","fromObject","assertSize","size","alloc","fill","encoding","checked","string","isEncoding","actual","write","fromArrayLike","byteOffset","isBuffer","copy","isnan","isArray","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","read","buf","indexSize","readUInt16BE","arrLength","valLength","String","foundIndex","found","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","out","toHex","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","replace","INVALID_BASE64_RE","trim","units","Infinity","leadSurrogate","byteArray","hi","lo","toByteArray","src","dst","INSPECT_MAX_BYTES","foo","subarray","poolSize","_augment","species","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","equals","inspect","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","g","Function","placeHoldersCount","tmp","placeHolders","Arr","L","revLookup","tripletToBase64","num","lookup","encodeChunk","uint8","extraBytes","parts","len2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2"],"mappings":"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","file":"GomeJSBridge.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(module, Buffer) {var require;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*\r\n * @Author: liuxiaocong \r\n * @Date: 2017-07-22 17:49:47 \r\n * @Last Modified by: liuxiaocong\r\n * @Last Modified time: 2017-08-22 16:39:44\r\n */\n// Platform: android+ios = unit\nmodule.exports = function () {\n    var PLATFORM_VERSION_BUILD_LABEL = '1.0.0';\n    // file: src/scripts/require.js\n    var require, define;\n\n    (function () {\n        var modules = {},\n\n        // Stack of moduleIds currently being built.\n        requireStack = [],\n\n        // Map of module ID -> index into requireStack of modules currently being built.\n        inProgressModules = {},\n            SEPARATOR = \".\";\n\n        function build(module) {\n            var factory = module.factory,\n                localRequire = function localRequire(id) {\n                var resultantId = id;\n                //Its a relative path, so lop off the last portion and add the id (minus \"./\")\n                if (id.charAt(0) === \".\") {\n                    resultantId = module.id.slice(0, module.id.lastIndexOf(SEPARATOR)) + SEPARATOR + id.slice(2);\n                }\n                return require(resultantId);\n            };\n            module.exports = {};\n            delete module.factory;\n            factory(localRequire, module.exports, module);\n            return module.exports;\n        }\n\n        require = function require(id) {\n            if (!modules[id]) {\n                throw \"module \" + id + \" not found\";\n            } else if (id in inProgressModules) {\n                var cycle = requireStack.slice(inProgressModules[id]).join('->') + '->' + id;\n                throw \"Cycle in require graph: \" + cycle;\n            }\n            if (modules[id].factory) {\n                try {\n                    inProgressModules[id] = requireStack.length;\n                    requireStack.push(id);\n                    return build(modules[id]);\n                } finally {\n                    delete inProgressModules[id];\n                    requireStack.pop();\n                }\n            }\n            return modules[id].exports;\n        };\n\n        define = function define(id, factory) {\n            if (modules[id]) {\n                throw \"module \" + id + \" already defined\";\n            }\n\n            modules[id] = {\n                id: id,\n                factory: factory\n            };\n        };\n\n        define.remove = function (id) {\n            delete modules[id];\n        };\n\n        define.moduleMap = modules;\n    })();\n\n    //Export for use in node\n    if (( false ? \"undefined\" : _typeof(module)) === \"object\" && typeof require === \"function\") {\n        module.exports.require = require;\n        module.exports.define = define;\n    }\n\n    // file: src/cordova.js\n    define(\"cordova\", function (require, exports, module) {\n        if (window.cordova && !(window.cordova instanceof HTMLElement)) {\n            throw new Error(\"cordova already defined\");\n        }\n\n        var channel = require('cordova/channel');\n        var platform = require('cordova/platform');\n        /**\r\n         * Intercept calls to addEventListener + removeEventListener and handle deviceready,\r\n         * resume, and pause events.\r\n         */\n        var m_document_addEventListener = document.addEventListener;\n        var m_document_removeEventListener = document.removeEventListener;\n        var m_window_addEventListener = window.addEventListener;\n        var m_window_removeEventListener = window.removeEventListener;\n\n        /**\r\n         * Houses custom event handlers to intercept on document + window event listeners.\r\n         */\n        var documentEventHandlers = {},\n            windowEventHandlers = {};\n\n        document.addEventListener = function (evt, handler, capture) {\n            var e = evt.toLowerCase();\n            if (typeof documentEventHandlers[e] != 'undefined') {\n                documentEventHandlers[e].subscribe(handler);\n            } else {\n                m_document_addEventListener.call(document, evt, handler, capture);\n            }\n        };\n\n        window.addEventListener = function (evt, handler, capture) {\n            var e = evt.toLowerCase();\n            if (typeof windowEventHandlers[e] != 'undefined') {\n                windowEventHandlers[e].subscribe(handler);\n            } else {\n                m_window_addEventListener.call(window, evt, handler, capture);\n            }\n        };\n\n        document.removeEventListener = function (evt, handler, capture) {\n            var e = evt.toLowerCase();\n            // If unsubscribing from an event that is handled by a plugin\n            if (typeof documentEventHandlers[e] != \"undefined\") {\n                documentEventHandlers[e].unsubscribe(handler);\n            } else {\n                m_document_removeEventListener.call(document, evt, handler, capture);\n            }\n        };\n\n        window.removeEventListener = function (evt, handler, capture) {\n            var e = evt.toLowerCase();\n            // If unsubscribing from an event that is handled by a plugin\n            if (typeof windowEventHandlers[e] != \"undefined\") {\n                windowEventHandlers[e].unsubscribe(handler);\n            } else {\n                m_window_removeEventListener.call(window, evt, handler, capture);\n            }\n        };\n\n        function createEvent(type, data) {\n            var event = document.createEvent('Events');\n            event.initEvent(type, false, false);\n            if (data) {\n                for (var i in data) {\n                    if (data.hasOwnProperty(i)) {\n                        event[i] = data[i];\n                    }\n                }\n            }\n            return event;\n        }\n\n        var cordova = {\n            define: define,\n            require: require,\n            version: PLATFORM_VERSION_BUILD_LABEL,\n            platformVersion: PLATFORM_VERSION_BUILD_LABEL,\n            platformId: platform.id,\n            /**\r\n             * Methods to add/remove your own addEventListener hijacking on document + window.\r\n             */\n            addWindowEventHandler: function addWindowEventHandler(event) {\n                return windowEventHandlers[event] = channel.create(event);\n            },\n            addStickyDocumentEventHandler: function addStickyDocumentEventHandler(event) {\n                return documentEventHandlers[event] = channel.createSticky(event);\n            },\n            addDocumentEventHandler: function addDocumentEventHandler(event) {\n                return documentEventHandlers[event] = channel.create(event);\n            },\n            removeWindowEventHandler: function removeWindowEventHandler(event) {\n                delete windowEventHandlers[event];\n            },\n            removeDocumentEventHandler: function removeDocumentEventHandler(event) {\n                delete documentEventHandlers[event];\n            },\n            /**\r\n             * Method to fire event from native code\r\n             * bNoDetach is required for events which cause an exception which needs to be caught in native code\r\n             */\n            fireDocumentEvent: function fireDocumentEvent(type, data, bNoDetach) {\n                var evt = createEvent(type, data);\n                if (typeof documentEventHandlers[type] != 'undefined') {\n                    if (bNoDetach) {\n                        documentEventHandlers[type].fire(evt);\n                    } else {\n                        setTimeout(function () {\n                            // Fire deviceready on listeners that were registered before cordova.js was loaded.\n                            if (type == 'deviceready') {\n                                document.dispatchEvent(evt);\n                            }\n                            documentEventHandlers[type].fire(evt);\n                        }, 0);\n                    }\n                } else {\n                    document.dispatchEvent(evt);\n                }\n            },\n            fireWindowEvent: function fireWindowEvent(type, data) {\n                var evt = createEvent(type, data);\n                if (typeof windowEventHandlers[type] != 'undefined') {\n                    setTimeout(function () {\n                        windowEventHandlers[type].fire(evt);\n                    }, 0);\n                } else {\n                    window.dispatchEvent(evt);\n                }\n            },\n\n            /**\r\n             * Plugin callback mechanism.\r\n             */\n            // Randomize the starting callbackId to avoid collisions after refreshing or navigating.\n            // This way, it's very unlikely that any new callback would get the same callbackId as an old callback.\n            callbackId: Math.floor(Math.random() * 2000000000),\n            callbacks: {},\n            callbackStatus: {\n                NO_RESULT: 0,\n                OK: 1,\n                CLASS_NOT_FOUND_EXCEPTION: 2,\n                ILLEGAL_ACCESS_EXCEPTION: 3,\n                INSTANTIATION_EXCEPTION: 4,\n                MALFORMED_URL_EXCEPTION: 5,\n                IO_EXCEPTION: 6,\n                INVALID_ACTION: 7,\n                JSON_EXCEPTION: 8,\n                ERROR: 9\n            },\n\n            /**\r\n             * Called by native code when returning successful result from an action.\r\n             */\n            callbackSuccess: function callbackSuccess(callbackId, args) {\n                cordova.callbackFromNative(callbackId, true, args.status, [args.message], args.keepCallback);\n            },\n\n            /**\r\n             * Called by native code when returning error result from an action.\r\n             */\n            callbackError: function callbackError(callbackId, args) {\n                // TODO: Deprecate callbackSuccess and callbackError in favour of callbackFromNative.\n                // Derive success from status.\n                cordova.callbackFromNative(callbackId, false, args.status, [args.message], args.keepCallback);\n            },\n\n            /**\r\n             * Called by native code when returning the result from an action.\r\n             */\n            callbackFromNative: function callbackFromNative(callbackId, isSuccess, status, args, keepCallback) {\n                try {\n                    var callback = cordova.callbacks[callbackId];\n                    if (callback) {\n                        if (isSuccess && status == cordova.callbackStatus.OK) {\n                            callback.success && callback.success.apply(null, args);\n                        } else if (!isSuccess) {\n                            callback.fail && callback.fail.apply(null, args);\n                        }\n                        /*\r\n                        else\r\n                            Note, this case is intentionally not caught.\r\n                            this can happen if isSuccess is true, but callbackStatus is NO_RESULT\r\n                            which is used to remove a callback from the list without calling the callbacks\r\n                            typically keepCallback is false in this case\r\n                        */\n                        // Clear callback if not expecting any more results\n                        if (!keepCallback) {\n                            delete cordova.callbacks[callbackId];\n                        }\n                    }\n                } catch (err) {\n                    var msg = \"Error in \" + (isSuccess ? \"Success\" : \"Error\") + \" callbackId: \" + callbackId + \" : \" + err;\n                    console && console.log && console.log(msg);\n                    cordova.fireWindowEvent(\"cordovacallbackerror\", {\n                        'message': msg\n                    });\n                    throw err;\n                }\n            }\n        };\n\n        module.exports = cordova;\n    });\n\n    // file: /Users/steveng/repo/cordova/cordova-android/cordova-js-src/android/nativeapiprovider.js\n    define(\"cordova/android/nativeapiprovider\", function (require, exports, module) {\n\n        /**\r\n         * Exports the ExposedJsApi.java object if available, otherwise exports the PromptBasedNativeApi.\r\n         */\n\n        var nativeApi = this._cordovaNative || require('cordova/android/promptbasednativeapi');\n        var currentApi = nativeApi;\n\n        module.exports = {\n            get: function get() {\n                return currentApi;\n            },\n            setPreferPrompt: function setPreferPrompt(value) {\n                currentApi = value ? require('cordova/android/promptbasednativeapi') : nativeApi;\n            },\n            // Used only by tests.\n            set: function set(value) {\n                currentApi = value;\n            }\n        };\n    });\n\n    // file: /Users/steveng/repo/cordova/cordova-android/cordova-js-src/android/promptbasednativeapi.js\n    define(\"cordova/android/promptbasednativeapi\", function (require, exports, module) {\n\n        /**\r\n         * Implements the API of ExposedJsApi.java, but uses prompt() to communicate.\r\n         * This is used pre-JellyBean, where addJavascriptInterface() is disabled.\r\n         */\n\n        module.exports = {\n            exec: function exec(bridgeSecret, service, action, callbackId, argsJson) {\n                return prompt(argsJson, 'gap:' + JSON.stringify([bridgeSecret, service, action, callbackId]));\n            },\n            setNativeToJsBridgeMode: function setNativeToJsBridgeMode(bridgeSecret, value) {\n                prompt(value, 'gap_bridge_mode:' + bridgeSecret);\n            },\n            retrieveJsMessages: function retrieveJsMessages(bridgeSecret, fromOnlineEvent) {\n                return prompt(+fromOnlineEvent, 'gap_poll:' + bridgeSecret);\n            }\n        };\n    });\n    // file: src/common/base64.js\n    define(\"cordova/base64\", function (require, exports, module) {\n\n        var base64 = exports;\n\n        base64.fromArrayBuffer = function (arrayBuffer) {\n            var array = new Uint8Array(arrayBuffer);\n            return uint8ToBase64(array);\n        };\n\n        base64.toArrayBuffer = function (str) {\n            var decodedStr = typeof atob != 'undefined' ? atob(str) : new Buffer(str, 'base64').toString('binary');\n            var arrayBuffer = new ArrayBuffer(decodedStr.length);\n            var array = new Uint8Array(arrayBuffer);\n            for (var i = 0, len = decodedStr.length; i < len; i++) {\n                array[i] = decodedStr.charCodeAt(i);\n            }\n            return arrayBuffer;\n        };\n\n        function uint8ToBase64(rawData) {\n            var numBytes = rawData.byteLength;\n            var output = \"\";\n            var segment;\n            var table = b64_12bitTable();\n            for (var i = 0; i < numBytes - 2; i += 3) {\n                segment = (rawData[i] << 16) + (rawData[i + 1] << 8) + rawData[i + 2];\n                output += table[segment >> 12];\n                output += table[segment & 0xfff];\n            }\n            if (numBytes - i == 2) {\n                segment = (rawData[i] << 16) + (rawData[i + 1] << 8);\n                output += table[segment >> 12];\n                output += b64_6bit[(segment & 0xfff) >> 6];\n                output += '=';\n            } else if (numBytes - i == 1) {\n                segment = rawData[i] << 16;\n                output += table[segment >> 12];\n                output += '==';\n            }\n            return output;\n        }\n    });\n    // file: src/common/channel.js\n    define(\"cordova/channel\", function (require, exports, module) {\n\n        var utils = require('cordova/utils'),\n            nextGuid = 1;\n        /**\r\n         * Custom pub-sub \"channel\" that can have functions subscribed to it\r\n         * This object is used to define and control firing of events for\r\n         * cordova initialization, as well as for custom events thereafter.\r\n         *\r\n         * The order of events during page load and Cordova startup is as follows:\r\n         *\r\n         * onDOMContentLoaded*         Internal event that is received when the web page is loaded and parsed.\r\n         * onNativeReady*              Internal event that indicates the Cordova native side is ready.\r\n         * onCordovaReady*             Internal event fired when all Cordova JavaScript objects have been created.\r\n         * onDeviceReady*              User event fired to indicate that Cordova is ready\r\n         * onResume                    User event fired to indicate a start/resume lifecycle event\r\n         * onPause                     User event fired to indicate a pause lifecycle event\r\n         *\r\n         * The events marked with an * are sticky. Once they have fired, they will stay in the fired state.\r\n         * All listeners that subscribe after the event is fired will be executed right away.\r\n         *\r\n         * The only Cordova events that user code should register for are:\r\n         *      deviceready           Cordova native code is initialized and Cordova APIs can be called from JavaScript\r\n         *      pause                 App has moved to background\r\n         *      resume                App has returned to foreground\r\n         *\r\n         * Listeners can be registered as:\r\n         *      document.addEventListener(\"deviceready\", myDeviceReadyListener, false);\r\n         *      document.addEventListener(\"resume\", myResumeListener, false);\r\n         *      document.addEventListener(\"pause\", myPauseListener, false);\r\n         *\r\n         * The DOM lifecycle events should be used for saving and restoring state\r\n         *      window.onload\r\n         *      window.onunload\r\n         *\r\n         */\n\n        /**\r\n         * Channel\r\n         * @constructor\r\n         * @param type  String the channel name\r\n         */\n\n        var Channel = function Channel(type, sticky) {\n            this.type = type;\n            // Map of guid -> function. \n            this.handlers = {};\n            // 0 = Non-sticky, 1 = Sticky non-fired, 2 = Sticky fired.\n            this.state = sticky ? 1 : 0;\n            // Used in sticky mode to remember args passed to fire().\n            this.fireArgs = null;\n            // Used by onHasSubscribersChange to know if there are any listeners.\n            this.numHandlers = 0;\n            // Function that is called when the first listener is subscribed, or when\n            // the last listener is unsubscribed.\n            this.onHasSubscribersChange = null;\n        },\n            channel = {\n            /**\r\n             * Calls the provided function only after all of the channels specified\r\n             * have been fired. All channels must be sticky channels.\r\n             */\n            join: function join(h, c) {\n                var len = c.length,\n                    i = len,\n                    f = function f() {\n                    if (! --i) h();\n                };\n                for (var j = 0; j < len; j++) {\n                    if (c[j].state === 0) {\n                        throw Error('Can only use join with sticky channels.');\n                    }\n                    c[j].subscribe(f);\n                }\n                if (!len) h();\n            },\n            create: function create(type) {\n                return channel[type] = new Channel(type, false);\n            },\n            createSticky: function createSticky(type) {\n                return channel[type] = new Channel(type, true);\n            },\n\n            /**\r\n             * cordova Channels that must fire before \"deviceready\" is fired.\r\n             */\n            deviceReadyChannelsArray: [],\n            deviceReadyChannelsMap: {},\n\n            /**\r\n             * Indicate that a feature needs to be initialized before it is ready to be used.\r\n             * This holds up Cordova's \"deviceready\" event until the feature has been initialized\r\n             * and Cordova.initComplete(feature) is called.\r\n             *\r\n             * @param feature {String}     The unique feature name\r\n             */\n            waitForInitialization: function waitForInitialization(feature) {\n                if (feature) {\n                    var c = channel[feature] || this.createSticky(feature);\n                    this.deviceReadyChannelsMap[feature] = c;\n                    this.deviceReadyChannelsArray.push(c);\n                }\n            }\n        };\n\n        function forceFunction(f) {\n            if (typeof f != 'function') throw \"Function required as first argument!\";\n        }\n\n        /**\r\n         * Subscribes the given function to the channel. Any time that\r\n         * Channel.fire is called so too will the function.\r\n         * Optionally specify an execution context for the function\r\n         * and a guid that can be used to stop subscribing to the channel.\r\n         * Returns the guid.\r\n         */\n        Channel.prototype.subscribe = function (f, c) {\n            // need a function to call\n            forceFunction(f);\n            if (this.state == 2) {\n                f.apply(c || this, this.fireArgs);\n                return;\n            }\n\n            var func = f,\n                guid = f.observer_guid;\n            if ((typeof c === \"undefined\" ? \"undefined\" : _typeof(c)) == \"object\") {\n                func = utils.close(c, f);\n            }\n\n            if (!guid) {\n                // first time any channel has seen this subscriber\n                guid = '' + nextGuid++;\n            }\n            func.observer_guid = guid;\n            f.observer_guid = guid;\n\n            // Don't add the same handler more than once.\n            if (!this.handlers[guid]) {\n                this.handlers[guid] = func;\n                this.numHandlers++;\n                if (this.numHandlers == 1) {\n                    this.onHasSubscribersChange && this.onHasSubscribersChange();\n                }\n            }\n        };\n\n        /**\r\n         * Unsubscribes the function with the given guid from the channel.\r\n         */\n        Channel.prototype.unsubscribe = function (f) {\n            // need a function to unsubscribe\n            forceFunction(f);\n\n            var guid = f.observer_guid,\n                handler = this.handlers[guid];\n            if (handler) {\n                delete this.handlers[guid];\n                this.numHandlers--;\n                if (this.numHandlers === 0) {\n                    this.onHasSubscribersChange && this.onHasSubscribersChange();\n                }\n            }\n        };\n\n        /**\r\n         * Calls all functions subscribed to this channel.\r\n         */\n        Channel.prototype.fire = function (e) {\n            var fail = false,\n                fireArgs = Array.prototype.slice.call(arguments);\n            // Apply stickiness.\n            if (this.state == 1) {\n                this.state = 2;\n                this.fireArgs = fireArgs;\n            }\n            if (this.numHandlers) {\n                // Copy the values first so that it is safe to modify it from within\n                // callbacks.\n                var toCall = [];\n                for (var item in this.handlers) {\n                    toCall.push(this.handlers[item]);\n                }\n                for (var i = 0; i < toCall.length; ++i) {\n                    toCall[i].apply(this, fireArgs);\n                }\n                if (this.state == 2 && this.numHandlers) {\n                    this.numHandlers = 0;\n                    this.handlers = {};\n                    this.onHasSubscribersChange && this.onHasSubscribersChange();\n                }\n            }\n        };\n\n        // defining them here so they are ready super fast!\n        // DOM event that is received when the web page is loaded and parsed.\n        channel.createSticky('onDOMContentLoaded');\n\n        // Event to indicate the Cordova native side is ready.\n        channel.createSticky('onNativeReady');\n\n        // Event to indicate that all Cordova JavaScript objects have been created\n        // and it's time to run plugin constructors.\n        channel.createSticky('onCordovaReady');\n\n        // Event to indicate that Cordova is ready\n        channel.createSticky('onDeviceReady');\n\n        // Event to indicate a resume lifecycle event\n        channel.create('onResume');\n\n        // Event to indicate a pause lifecycle event\n        channel.create('onPause');\n\n        // Channels that must fire before \"deviceready\" is fired.\n        channel.waitForInitialization('onCordovaReady');\n        channel.waitForInitialization('onDOMContentLoaded');\n\n        module.exports = channel;\n    });\n\n    // file: /Users/steveng/repo/cordova/cordova-android/cordova-js-src/exec.js\n    define(\"cordova/exec\", function (require, exports, module) {\n        var platform = require('cordova/platform');\n        if (platform.id == 'android') {\n            module.exports = require('cordova/moudleANDExec');\n        } else {\n            module.exports = require('cordova/moudleIOSExec');\n        }\n    });\n    define(\"cordova/moudleANDExec\", function (require, exports, module) {\n        /**\r\n         * Execute a cordova command.  It is up to the native side whether this action\r\n         * is synchronous or asynchronous.  The native side can return:\r\n         *      Synchronous: PluginResult object as a JSON string\r\n         *      Asynchronous: Empty string \"\"\r\n         * If async, the native side will cordova.callbackSuccess or cordova.callbackError,\r\n         * depending upon the result of the action.\r\n         *\r\n         * @param {Function} success    The success callback\r\n         * @param {Function} fail       The fail callback\r\n         * @param {String} service      The name of the service to use\r\n         * @param {String} action       Action to be run in cordova\r\n         * @param {String[]} [args]     Zero or more arguments to pass to the method\r\n         */\n        var cordova = require('cordova'),\n            nativeApiProvider = require('cordova/android/nativeapiprovider'),\n            utils = require('cordova/utils'),\n            base64 = require('cordova/base64'),\n            channel = require('cordova/channel'),\n            jsToNativeModes = {\n            PROMPT: 0,\n            JS_OBJECT: 1\n        },\n            nativeToJsModes = {\n            // Polls for messages using the JS->Native bridge.\n            POLLING: 0,\n            // For LOAD_URL to be viable, it would need to have a work-around for\n            // the bug where the soft-keyboard gets dismissed when a message is sent.\n            LOAD_URL: 1,\n            // For the ONLINE_EVENT to be viable, it would need to intercept all event\n            // listeners (both through addEventListener and window.ononline) as well\n            // as set the navigator property itself.\n            ONLINE_EVENT: 2\n        },\n            jsToNativeBridgeMode,\n\n        // Set lazily.\n        nativeToJsBridgeMode = nativeToJsModes.ONLINE_EVENT,\n            pollEnabled = false,\n            bridgeSecret = -1;\n\n        var messagesFromNative = [];\n        var isProcessing = false;\n        var resolvedPromise = typeof Promise == 'undefined' ? null : Promise.resolve();\n        var nextTick = resolvedPromise ? function (fn) {\n            resolvedPromise.then(fn);\n        } : function (fn) {\n            setTimeout(fn);\n        };\n\n        function androidExec(success, fail, service, action, args) {\n            if (bridgeSecret < 0) {\n                // If we ever catch this firing, we'll need to queue up exec()s\n                // and fire them once we get a secret. For now, I don't think\n                // it's possible for exec() to be called since plugins are parsed but\n                // not run until until after onNativeReady.\n                throw new Error('exec() called without bridgeSecret');\n            }\n            // Set default bridge modes if they have not already been set.\n            // By default, we use the failsafe, since addJavascriptInterface breaks too often\n            if (jsToNativeBridgeMode === undefined) {\n                androidExec.setJsToNativeBridgeMode(jsToNativeModes.JS_OBJECT);\n            }\n\n            var callbackId = service + cordova.callbackId++,\n                argsJson = JSON.stringify(args);\n\n            if (success || fail) {\n                cordova.callbacks[callbackId] = {\n                    success: success,\n                    fail: fail\n                };\n            }\n\n            var msgs = nativeApiProvider.get().exec(bridgeSecret, service, action, callbackId, argsJson);\n            // If argsJson was received by Java as null, try again with the PROMPT bridge mode.\n            // This happens in rare circumstances, such as when certain Unicode characters are passed over the bridge on a Galaxy S2.  See CB-2666.\n            if (jsToNativeBridgeMode == jsToNativeModes.JS_OBJECT && msgs === \"@Null arguments.\") {\n                androidExec.setJsToNativeBridgeMode(jsToNativeModes.PROMPT); //0\n                androidExec(success, fail, service, action, args);\n                androidExec.setJsToNativeBridgeMode(jsToNativeModes.JS_OBJECT); //1\n            } else if (msgs) {\n                messagesFromNative.push(msgs);\n                // Always process async to avoid exceptions messing up stack.\n                nextTick(processMessages);\n            }\n        }\n\n        androidExec.init = function () {\n            bridgeSecret = +prompt('', 'gap_init:' + nativeToJsBridgeMode);\n            channel.onNativeReady.fire();\n        };\n\n        function pollOnceFromOnlineEvent() {\n            pollOnce(true);\n        }\n        function pollOnce(opt_fromOnlineEvent) {\n            if (bridgeSecret < 0) {\n                // This can happen when the NativeToJsMessageQueue resets the online state on page transitions.\n                // We know there's nothing to retrieve, so no need to poll.\n                return;\n            }\n            var msgs = nativeApiProvider.get().retrieveJsMessages(bridgeSecret, !!opt_fromOnlineEvent);\n            if (msgs) {\n                messagesFromNative.push(msgs);\n                // Process sync since we know we're already top-of-stack.\n                processMessages();\n            }\n        }\n\n        function pollingTimerFunc() {\n            if (pollEnabled) {\n                pollOnce();\n                setTimeout(pollingTimerFunc, 50);\n            }\n        }\n        function hookOnlineApis() {\n            function proxyEvent(e) {\n                cordova.fireWindowEvent(e.type);\n            }\n            // The network module takes care of firing online and offline events.\n            // It currently fires them only on document though, so we bridge them\n            // to window here (while first listening for exec()-releated online/offline\n            // events).\n            window.addEventListener('online', pollOnceFromOnlineEvent, false);\n            window.addEventListener('offline', pollOnceFromOnlineEvent, false);\n            cordova.addWindowEventHandler('online');\n            cordova.addWindowEventHandler('offline');\n            document.addEventListener('online', proxyEvent, false);\n            document.addEventListener('offline', proxyEvent, false);\n        }\n\n        hookOnlineApis();\n        androidExec.jsToNativeModes = jsToNativeModes;\n        androidExec.nativeToJsModes = nativeToJsModes;\n\n        androidExec.setJsToNativeBridgeMode = function (mode) {\n            if (mode == jsToNativeModes.JS_OBJECT && !window._cordovaNative) {\n                mode = jsToNativeModes.PROMPT;\n            }\n            nativeApiProvider.setPreferPrompt(mode == jsToNativeModes.PROMPT);\n            jsToNativeBridgeMode = mode;\n        };\n\n        androidExec.setNativeToJsBridgeMode = function (mode) {\n            if (mode == nativeToJsBridgeMode) {\n                return;\n            }\n            if (nativeToJsBridgeMode == nativeToJsModes.POLLING) {\n                pollEnabled = false;\n            }\n\n            nativeToJsBridgeMode = mode;\n            // Tell the native side to switch modes.\n            // Otherwise, it will be set by androidExec.init()\n            if (bridgeSecret >= 0) {\n                nativeApiProvider.get().setNativeToJsBridgeMode(bridgeSecret, mode);\n            }\n\n            if (mode == nativeToJsModes.POLLING) {\n                pollEnabled = true;\n                setTimeout(pollingTimerFunc, 1);\n            }\n        };\n\n        function buildPayload(payload, message) {\n            var payloadKind = message.charAt(0);\n            if (payloadKind == 's') {\n                payload.push(message.slice(1));\n            } else if (payloadKind == 't') {\n                payload.push(true);\n            } else if (payloadKind == 'f') {\n                payload.push(false);\n            } else if (payloadKind == 'N') {\n                payload.push(null);\n            } else if (payloadKind == 'n') {\n                payload.push(+message.slice(1));\n            } else if (payloadKind == 'A') {\n                var data = message.slice(1);\n                payload.push(base64.toArrayBuffer(data));\n            } else if (payloadKind == 'S') {\n                payload.push(window.atob(message.slice(1)));\n            } else if (payloadKind == 'M') {\n                var multipartMessages = message.slice(1);\n                while (multipartMessages !== \"\") {\n                    var spaceIdx = multipartMessages.indexOf(' ');\n                    var msgLen = +multipartMessages.slice(0, spaceIdx);\n                    var multipartMessage = multipartMessages.substr(spaceIdx + 1, msgLen);\n                    multipartMessages = multipartMessages.slice(spaceIdx + msgLen + 1);\n                    buildPayload(payload, multipartMessage);\n                }\n            } else {\n                payload.push(JSON.parse(message));\n            }\n        }\n\n        // Processes a single message, as encoded by NativeToJsMessageQueue.java.\n        function processMessage(message) {\n            var firstChar = message.charAt(0);\n            if (firstChar == 'J') {\n                // This is deprecated on the .java side. It doesn't work with CSP enabled.\n                eval(message.slice(1));\n            } else if (firstChar == 'S' || firstChar == 'F') {\n                var success = firstChar == 'S';\n                var keepCallback = message.charAt(1) == '1';\n                var spaceIdx = message.indexOf(' ', 2);\n                var status = +message.slice(2, spaceIdx);\n                var nextSpaceIdx = message.indexOf(' ', spaceIdx + 1);\n                var callbackId = message.slice(spaceIdx + 1, nextSpaceIdx);\n                var payloadMessage = message.slice(nextSpaceIdx + 1);\n                var payload = [];\n                buildPayload(payload, payloadMessage);\n                cordova.callbackFromNative(callbackId, success, status, payload, keepCallback);\n            } else {\n                console.log(\"processMessage failed: invalid message: \" + JSON.stringify(message));\n            }\n        }\n\n        function processMessages() {\n            // Check for the reentrant case.\n            if (isProcessing) {\n                return;\n            }\n            if (messagesFromNative.length === 0) {\n                return;\n            }\n            isProcessing = true;\n            try {\n                var msg = popMessageFromQueue();\n                // The Java side can send a * message to indicate that it\n                // still has messages waiting to be retrieved.\n                if (msg == '*' && messagesFromNative.length === 0) {\n                    nextTick(pollOnce);\n                    return;\n                }\n                processMessage(msg);\n            } finally {\n                isProcessing = false;\n                if (messagesFromNative.length > 0) {\n                    nextTick(processMessages);\n                }\n            }\n        }\n\n        function popMessageFromQueue() {\n            var messageBatch = messagesFromNative.shift();\n            if (messageBatch == '*') {\n                return '*';\n            }\n\n            var spaceIdx = messageBatch.indexOf(' ');\n            var msgLen = +messageBatch.slice(0, spaceIdx);\n            var message = messageBatch.substr(spaceIdx + 1, msgLen);\n            messageBatch = messageBatch.slice(spaceIdx + msgLen + 1);\n            if (messageBatch) {\n                messagesFromNative.unshift(messageBatch);\n            }\n            return message;\n        }\n\n        module.exports = androidExec;\n    });\n    define(\"cordova/moudleIOSExec\", function (require, exports, module) {\n        /**\r\n          * Creates a gap bridge iframe used to notify the native code about queued\r\n          * commands.\r\n          */\n        var cordova = require('cordova'),\n            channel = require('cordova/channel'),\n            utils = require('cordova/utils'),\n            base64 = require('cordova/base64'),\n\n        // XHR mode does not work on iOS 4.2.\n        // XHR mode's main advantage is working around a bug in -webkit-scroll, which\n        // doesn't exist only on iOS 5.x devices.\n        // IFRAME_NAV is the fastest.\n        // IFRAME_HASH could be made to enable synchronous bridge calls if we wanted this feature.\n        jsToNativeModes = {\n            IFRAME_NAV: 0, // Default. Uses a new iframe for each poke.\n            // XHR bridge appears to be flaky sometimes: CB-3900, CB-3359, CB-5457, CB-4970, CB-4998, CB-5134\n            XHR_NO_PAYLOAD: 1, // About the same speed as IFRAME_NAV. Performance not about the same as IFRAME_NAV, but more variable.\n            XHR_WITH_PAYLOAD: 2, // Flakey, and not as performant\n            XHR_OPTIONAL_PAYLOAD: 3, // Flakey, and not as performant\n            IFRAME_HASH_NO_PAYLOAD: 4, // Not fully baked. A bit faster than IFRAME_NAV, but risks jank since poke happens synchronously.\n            IFRAME_HASH_WITH_PAYLOAD: 5, // Slower than no payload. Maybe since it has to be URI encoded / decoded.\n            WK_WEBVIEW_BINDING: 6 // Only way that works for WKWebView :)\n        },\n            bridgeMode,\n            execXhr,\n            requestCount = 0,\n            vcHeaderValue = null,\n            commandQueue = [],\n            // Contains pending JS->Native messages.\n        isInContextOfEvalJs = 0,\n            failSafeTimerId = 0;\n\n        function shouldBundleCommandJson() {\n            if (bridgeMode === jsToNativeModes.XHR_WITH_PAYLOAD) {\n                return true;\n            }\n            if (bridgeMode === jsToNativeModes.XHR_OPTIONAL_PAYLOAD) {\n                var payloadLength = 0;\n                for (var i = 0; i < commandQueue.length; ++i) {\n                    payloadLength += commandQueue[i].length;\n                }\n                // The value here was determined using the benchmark within CordovaLibApp on an iPad 3.\n                return payloadLength < 4500;\n            }\n            return false;\n        }\n\n        function massageArgsJsToNative(args) {\n            if (!args || utils.typeName(args) != 'Array') {\n                return args;\n            }\n            var ret = [];\n            args.forEach(function (arg, i) {\n                if (utils.typeName(arg) == 'ArrayBuffer') {\n                    ret.push({\n                        'CDVType': 'ArrayBuffer',\n                        'data': base64.fromArrayBuffer(arg)\n                    });\n                } else {\n                    ret.push(arg);\n                }\n            });\n            return ret;\n        }\n\n        function massageMessageNativeToJs(message) {\n            if (message.CDVType == 'ArrayBuffer') {\n                var stringToArrayBuffer = function stringToArrayBuffer(str) {\n                    var ret = new Uint8Array(str.length);\n                    for (var i = 0; i < str.length; i++) {\n                        ret[i] = str.charCodeAt(i);\n                    }\n                    return ret.buffer;\n                };\n                var base64ToArrayBuffer = function base64ToArrayBuffer(b64) {\n                    return stringToArrayBuffer(atob(b64));\n                };\n                message = base64ToArrayBuffer(message.data);\n            }\n            return message;\n        }\n\n        function convertMessageToArgsNativeToJs(message) {\n            var args = [];\n            if (!message || !message.hasOwnProperty('CDVType')) {\n                args.push(message);\n            } else if (message.CDVType == 'MultiPart') {\n                message.messages.forEach(function (e) {\n                    args.push(massageMessageNativeToJs(e));\n                });\n            } else {\n                args.push(massageMessageNativeToJs(message));\n            }\n            return args;\n        }\n\n        function iOSExec() {\n            if (bridgeMode === undefined) {\n                bridgeMode = jsToNativeModes.IFRAME_NAV;\n            }\n\n            if (window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.cordova && window.webkit.messageHandlers.cordova.postMessage) {\n                bridgeMode = jsToNativeModes.WK_WEBVIEW_BINDING;\n            }\n\n            var successCallback, failCallback, service, action, actionArgs, splitCommand;\n            var callbackId = null;\n            if (typeof arguments[0] !== \"string\") {\n                // FORMAT ONE\n                successCallback = arguments[0];\n                failCallback = arguments[1];\n                service = arguments[2];\n                action = arguments[3];\n                actionArgs = arguments[4];\n\n                // Since we need to maintain backwards compatibility, we have to pass\n                // an invalid callbackId even if no callback was provided since plugins\n                // will be expecting it. The Cordova.exec() implementation allocates\n                // an invalid callbackId and passes it even if no callbacks were given.\n                callbackId = 'INVALID';\n            } else {\n                // FORMAT TWO, REMOVED\n                try {\n                    splitCommand = arguments[0].split(\".\");\n                    action = splitCommand.pop();\n                    service = splitCommand.join(\".\");\n                    actionArgs = Array.prototype.splice.call(arguments, 1);\n\n                    console.log('The old format of this exec call has been removed (deprecated since 2.1). Change to: ' + \"cordova.exec(null, null, \\\"\" + service + \"\\\", \\\"\" + action + \"\\\",\" + JSON.stringify(actionArgs) + \");\");\n                    return;\n                } catch (e) {}\n            }\n\n            // If actionArgs is not provided, default to an empty array\n            actionArgs = actionArgs || [];\n\n            // Register the callbacks and add the callbackId to the positional\n            // arguments if given.\n            if (successCallback || failCallback) {\n                callbackId = service + cordova.callbackId++;\n                cordova.callbacks[callbackId] = { success: successCallback, fail: failCallback };\n            }\n\n            actionArgs = massageArgsJsToNative(actionArgs);\n\n            var command = [callbackId, service, action, actionArgs];\n\n            // Stringify and queue the command. We stringify to command now to\n            // effectively clone the command arguments in case they are mutated before\n            // the command is executed.\n            commandQueue.push(JSON.stringify(command));\n\n            if (bridgeMode === jsToNativeModes.WK_WEBVIEW_BINDING) {\n                window.webkit.messageHandlers.cordova.postMessage(command);\n            } else {\n                // If we're in the context of a stringByEvaluatingJavaScriptFromString call,\n                // then the queue will be flushed when it returns; no need for a poke.\n                // Also, if there is already a command in the queue, then we've already\n                // poked the native side, so there is no reason to do so again.\n                if (!isInContextOfEvalJs && commandQueue.length == 1) {\n                    // pokeNative();\n                    pokeNativeViaXhr();\n                }\n            }\n        }\n\n        function pokeNativeViaXhr() {\n            // This prevents sending an XHR when there is already one being sent.\n            // This should happen only in rare circumstances (refer to unit tests).\n            if (execXhr && execXhr.readyState != 4) {\n                execXhr = null;\n            }\n            // Re-using the XHR improves exec() performance by about 10%.\n            execXhr = execXhr || new XMLHttpRequest();\n            // Changing this to a GET will make the XHR reach the URIProtocol on 4.2.\n            // For some reason it still doesn't work though...\n            // Add a timestamp to the query param to prevent caching.\n            execXhr.open('HEAD', \"/!gap_exec?\" + +new Date(), true);\n            if (!vcHeaderValue) {\n                vcHeaderValue = /.*\\((.*)\\)$/.exec(navigator.userAgent)[1];\n            }\n            execXhr.setRequestHeader('vc', vcHeaderValue);\n            execXhr.setRequestHeader('rc', ++requestCount);\n            if (shouldBundleCommandJson()) {\n                execXhr.setRequestHeader('cmds', iOSExec.nativeFetchMessages());\n            }\n            execXhr.send(null);\n        }\n\n        iOSExec.jsToNativeModes = jsToNativeModes;\n\n        iOSExec.nativeFetchMessages = function () {\n            // Stop listing for window detatch once native side confirms poke.\n            if (failSafeTimerId) {\n                clearTimeout(failSafeTimerId);\n                failSafeTimerId = 0;\n            }\n            // Each entry in commandQueue is a JSON string already.\n            if (!commandQueue.length) {\n                return '';\n            }\n            var json = '[' + commandQueue.join(',') + ']';\n            commandQueue.length = 0;\n            return json;\n        };\n\n        iOSExec.nativeCallback = function (callbackId, status, message, keepCallback) {\n            return iOSExec.nativeEvalAndFetch(function () {\n                var success = status === 0 || status === 1;\n                var args = convertMessageToArgsNativeToJs(message);\n                cordova.callbackFromNative(callbackId, success, status, args, keepCallback);\n            });\n        };\n\n        iOSExec.nativeEvalAndFetch = function (func) {\n            // This shouldn't be nested, but better to be safe.\n            isInContextOfEvalJs++;\n            try {\n                func();\n                return iOSExec.nativeFetchMessages();\n            } finally {\n                isInContextOfEvalJs--;\n            }\n        };\n\n        module.exports = iOSExec;\n    });\n\n    // file: src/common/init.js\n    define(\"cordova/init\", function (require, exports, module) {\n\n        var channel = require('cordova/channel');\n        var cordova = require('cordova');\n        var platform = require('cordova/platform');\n        var utils = require('cordova/utils');\n\n        var platformInitChannelsArray = [channel.onNativeReady];\n\n        function logUnfiredChannels(arr) {\n            for (var i = 0; i < arr.length; ++i) {\n                if (arr[i].state != 2) {\n                    console.log('Channel not fired: ' + arr[i].type);\n                }\n            }\n        }\n\n        window.setTimeout(function () {\n            if (channel.onDeviceReady.state != 2) {\n                console.log('deviceready has not fired after 5 seconds.');\n                logUnfiredChannels(platformInitChannelsArray);\n                logUnfiredChannels(channel.deviceReadyChannelsArray);\n            }\n        }, 5000);\n\n        // Register pause, resume and deviceready channels as events on document.\n        channel.onPause = cordova.addDocumentEventHandler('pause');\n        channel.onResume = cordova.addDocumentEventHandler('resume');\n        channel.onActivated = cordova.addDocumentEventHandler('activated');\n        channel.onDeviceReady = cordova.addStickyDocumentEventHandler('deviceready');\n\n        // Listen for DOMContentLoaded and notify our channel subscribers.\n        if (document.readyState == 'complete' || document.readyState == 'interactive') {\n            channel.onDOMContentLoaded.fire();\n        } else {\n            document.addEventListener('DOMContentLoaded', function () {\n                channel.onDOMContentLoaded.fire();\n            }, false);\n        }\n\n        // _nativeReady is global variable that the native side can set\n        // to signify that the native code is ready. It is a global since\n        // it may be called before any cordova JS is ready.\n        if (window._nativeReady) {\n            channel.onNativeReady.fire();\n        }\n\n        // Call the platform-specific initialization.\n        platform.bootstrap && platform.bootstrap();\n        /**\r\n         * Create all cordova objects once native side is ready.\r\n         */\n        channel.join(function () {\n\n            // Fire event to notify that all objects are created\n            channel.onCordovaReady.fire();\n\n            // Fire onDeviceReady event once page has fully loaded, all\n            // constructors have run and cordova info has been received from native\n            // side.\n            channel.join(function () {\n                require('cordova').fireDocumentEvent('deviceready');\n            }, channel.deviceReadyChannelsArray);\n        }, platformInitChannelsArray);\n    });\n    define(\"cordova/platform\", function (require, exports, module) {\n        var system = '';\n        if (window.navigator.userAgent.match(/android/i)) {\n            system = 'android';\n        } else if (window.navigator.userAgent.match(/iPhone|iPad/i)) {\n            system = 'ios';\n        }\n        module.exports = {\n            id: system,\n            bootstrap: function bootstrap() {\n                var channel = require('cordova/channel'),\n                    cordova = require('cordova'),\n                    exec = require('cordova/exec');\n                var APP_PLUGIN_NAME = \"CoreAndroid\";\n                if (system == 'android') {\n                    exec.init();\n                    channel.onCordovaReady.subscribe(function () {\n                        exec(onMessageFromNative, null, APP_PLUGIN_NAME, 'messageChannel', []);\n                        exec(null, null, APP_PLUGIN_NAME, \"show\", []);\n                    });\n                } else {\n                    require('cordova/channel').onNativeReady.fire();\n                }\n            }\n        };\n        function onMessageFromNative(msg) {\n            var cordova = require('cordova');\n            var action = msg.action;\n\n            switch (action) {\n                // Button events\n                case 'backbutton':\n                case 'menubutton':\n                case 'searchbutton':\n                // App life cycle events\n                case 'pause':\n                case 'resume':\n                // Volume events\n                case 'volumedownbutton':\n                case 'volumeupbutton':\n                    cordova.fireDocumentEvent(action);\n                    break;\n                default:\n                    throw new Error('Unknown event action ' + action);\n            }\n        }\n    });\n    // file: src/common/utils.js\n    define(\"cordova/utils\", function (require, exports, module) {\n\n        var utils = exports;\n        utils.typeName = function (val) {\n            return Object.prototype.toString.call(val).slice(8, -1);\n        };\n        /**\r\n         * Returns a wrapped version of the function\r\n         */\n        utils.close = function (context, func, params) {\n            return function () {\n                var args = params || arguments;\n                return func.apply(context, args);\n            };\n        };\n    });\n    define('cordova/Bridge', function (require, exports, module) {\n        var exec = require('cordova/exec');\n        cordova.exec = exec;\n        var Bridge = {};\n        Bridge = {\n            isLogin: function isLogin(ok, fail) {\n                exec(ok, fail, \"Login\", \"isLogin\", []);\n            },\n            login: function login(ok, fail, param) {\n                // exec(ok, null, \"Login\", \"showLoginView\", []);\n                exec(function () {\n                    if (param.refresh) {\n                        window.location.reload();\n                        ok();\n                    } else {\n                        ok();\n                    }\n                }, null, \"Login\", \"showLoginView\", []);\n            },\n            getUserInfo: function getUserInfo(ok, fail) {\n                exec(ok, fail, \"Login\", \"getUserInfo\", []);\n            },\n            toast: function toast(ok, fail, args) {\n                exec(ok, fail, \"View\", \"toast\", [args]);\n            },\n            callShareComp: function callShareComp(ok, fail, args) {\n                exec(ok, fail, \"Share\", \"showNativeShareComponent\", [args]);\n            },\n            fetch: function fetch(ok, fail, args) {\n                exec(ok, fail, \"Network\", \"sendRequest\", [args]);\n            },\n            popWindow: function popWindow() {\n                exec(null, null, \"Route\", \"close\", []);\n            },\n            pushWindow: function pushWindow(ok, fail, args) {\n                exec(ok, fail, \"Route\", \"open\", [args]);\n            },\n            setHeadBar: function setHeadBar(ok, fail, args) {\n                exec(ok, fail, \"View\", \"initTitleBar\", [args]);\n            },\n            getLocation: function getLocation(ok, fail) {\n                exec(ok, fail, \"Location\", \"getInfo\", []);\n            },\n            getDeviceId: function getDeviceId(ok, fail) {\n                exec(ok, fail, \"Device1\", \"getInfo\", []);\n            },\n            // add\n            showLoadingComp: function showLoadingComp(ok, fail, args) {\n                exec(ok, fail, \"View\", \"showLoading\", [args]);\n            },\n            hideLoadingComp: function hideLoadingComp(ok, fail) {\n                exec(ok, fail, \"View\", \"hideLoading\", []);\n            },\n            showErrorComp: function showErrorComp(ok, fail, args) {\n                exec(ok, fail, \"View\", \"showErrorView\", [args]);\n            },\n            hideErrorComp: function hideErrorComp(ok, fail) {\n                exec(ok, fail, \"View\", \"hideErrorView\", []);\n            }\n        };\n        module.exports = Bridge;\n    });\n\n    window.cordova = require('cordova');\n    // file: src/scripts/bootstrap.js\n    require('cordova/init');\n\n    return require('cordova/Bridge');\n}();\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module), __webpack_require__(2).Buffer))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function () {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function get() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function get() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(4);\nvar ieee754 = __webpack_require__(5);\nvar isArray = __webpack_require__(6);\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength();\n\nfunction typedArraySupport() {\n  try {\n    var arr = new Uint8Array(1);\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function foo() {\n        return 42;\n      } };\n    return arr.foo() === 42 && // typed array instances can be augmented\n    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction kMaxLength() {\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n}\n\nfunction createBuffer(that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length');\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n    that.length = length;\n  }\n\n  return that;\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length);\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error('If encoding is specified then the first argument must be a string');\n    }\n    return allocUnsafe(this, arg);\n  }\n  return from(this, arg, encodingOrOffset, length);\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr;\n};\n\nfunction from(that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset);\n  }\n\n  return fromObject(that, value);\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length);\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    });\n  }\n}\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n}\n\nfunction alloc(that, size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(that, size);\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n  }\n  return createBuffer(that, size);\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding);\n};\n\nfunction allocUnsafe(that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n  return that;\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size);\n};\n\nfunction fromString(that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that;\n}\n\nfunction fromArrayLike(that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that;\n}\n\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n  return that;\n}\n\nfunction fromObject(that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that;\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that;\n  }\n\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0);\n      }\n      return fromArrayLike(that, obj);\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n  }\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\n\nBuffer.compare = function compare(a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n\n  if (a === b) return 0;\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0;\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length;\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n      case 'hex':\n        return len >>> 1;\n      case 'base64':\n        return base64ToBytes(string).length;\n      default:\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length | 0;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n  return '<Buffer ' + str + '>';\n};\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer');\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n\n  if (this === target) return 0;\n\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1;\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset; // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n    // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break;\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n\n  var newBuf;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf;\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2;\n};\n\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4;\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4;\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4;\n};\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0;\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds');\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n\n  return len;\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (code < 256) {\n        val = code;\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n\n  if (!val) val = 0;\n\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return '';\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str;\n}\n\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n\n        continue;\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n  return i;\n}\n\nfunction isnan(val) {\n  return val !== val; // eslint-disable-line no-self-compare\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar g;\n\n// This works in non-strict mode\ng = function () {\n\treturn this;\n}();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\n\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n}\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction placeHoldersCount(b64) {\n  var len = b64.length;\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n}\n\nfunction byteLength(b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64);\n}\n\nfunction toByteArray(b64) {\n  var i, l, tmp, placeHolders, arr;\n  var len = b64.length;\n  placeHolders = placeHoldersCount(b64);\n\n  arr = new Arr(len * 3 / 4 - placeHolders);\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len;\n\n  var L = 0;\n\n  for (i = 0; i < l; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[L++] = tmp >> 16 & 0xFF;\n    arr[L++] = tmp >> 8 & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  if (placeHolders === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[L++] = tmp & 0xFF;\n  } else if (placeHolders === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[L++] = tmp >> 8 & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var output = '';\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    output += lookup[tmp >> 2];\n    output += lookup[tmp << 4 & 0x3F];\n    output += '==';\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    output += lookup[tmp >> 10];\n    output += lookup[tmp >> 4 & 0x3F];\n    output += lookup[tmp << 2 & 0x3F];\n    output += '=';\n  }\n\n  parts.push(output);\n\n  return parts.join('');\n}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n\n  i += d;\n\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// GomeJSBridge.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7a1cb23d4f5eb59a64aa","/*\r\n * @Author: liuxiaocong \r\n * @Date: 2017-07-22 17:49:47 \r\n * @Last Modified by: liuxiaocong\r\n * @Last Modified time: 2017-08-22 16:39:44\r\n */\r\n// Platform: android+ios = unit\r\nmodule.exports = (function() {\r\n    var PLATFORM_VERSION_BUILD_LABEL = '1.0.0';\r\n    // file: src/scripts/require.js\r\n    var require, define;\r\n\r\n    (function() {\r\n        var modules = {},\r\n        // Stack of moduleIds currently being built.\r\n        requireStack = [],\r\n        // Map of module ID -> index into requireStack of modules currently being built.\r\n        inProgressModules = {},\r\n        SEPARATOR = \".\";\r\n\r\n        function build(module) {\r\n            var factory = module.factory,\r\n            localRequire = function(id) {\r\n                var resultantId = id;\r\n                //Its a relative path, so lop off the last portion and add the id (minus \"./\")\r\n                if (id.charAt(0) === \".\") {\r\n                    resultantId = module.id.slice(0, module.id.lastIndexOf(SEPARATOR)) + SEPARATOR + id.slice(2);\r\n                }\r\n                return require(resultantId);\r\n            };\r\n            module.exports = {};\r\n            delete module.factory;\r\n            factory(localRequire, module.exports, module);\r\n            return module.exports;\r\n        }\r\n\r\n        require = function(id) {\r\n            if (!modules[id]) {\r\n                throw \"module \" + id + \" not found\";\r\n            } else if (id in inProgressModules) {\r\n                var cycle = requireStack.slice(inProgressModules[id]).join('->') + '->' + id;\r\n                throw \"Cycle in require graph: \" + cycle;\r\n            }\r\n            if (modules[id].factory) {\r\n                try {\r\n                    inProgressModules[id] = requireStack.length;\r\n                    requireStack.push(id);\r\n                    return build(modules[id]);\r\n                } finally {\r\n                    delete inProgressModules[id];\r\n                    requireStack.pop();\r\n                }\r\n            }\r\n            return modules[id].exports;\r\n        };\r\n\r\n        define = function(id, factory) {\r\n            if (modules[id]) {\r\n                throw \"module \" + id + \" already defined\";\r\n            }\r\n\r\n            modules[id] = {\r\n                id: id,\r\n                factory: factory\r\n            };\r\n        };\r\n\r\n        define.remove = function(id) {\r\n            delete modules[id];\r\n        };\r\n\r\n        define.moduleMap = modules;\r\n    })();\r\n\r\n    //Export for use in node\r\n    if (typeof module === \"object\" && typeof require === \"function\") {\r\n        module.exports.require = require;\r\n        module.exports.define = define;\r\n    }\r\n\r\n    // file: src/cordova.js\r\n    define(\"cordova\", function(require, exports, module) {\r\n        if (window.cordova && !(window.cordova instanceof HTMLElement)) {\r\n            throw new Error(\"cordova already defined\");\r\n        }\r\n\r\n        var channel = require('cordova/channel');\r\n        var platform = require('cordova/platform');\r\n        /**\r\n         * Intercept calls to addEventListener + removeEventListener and handle deviceready,\r\n         * resume, and pause events.\r\n         */\r\n        var m_document_addEventListener = document.addEventListener;\r\n        var m_document_removeEventListener = document.removeEventListener;\r\n        var m_window_addEventListener = window.addEventListener;\r\n        var m_window_removeEventListener = window.removeEventListener;\r\n\r\n        /**\r\n         * Houses custom event handlers to intercept on document + window event listeners.\r\n         */\r\n        var documentEventHandlers = {},\r\n        windowEventHandlers = {};\r\n\r\n        document.addEventListener = function(evt, handler, capture) {\r\n            var e = evt.toLowerCase();\r\n            if (typeof documentEventHandlers[e] != 'undefined') {\r\n                documentEventHandlers[e].subscribe(handler);\r\n            } else {\r\n                m_document_addEventListener.call(document, evt, handler, capture);\r\n            }\r\n        };\r\n\r\n        window.addEventListener = function(evt, handler, capture) {\r\n            var e = evt.toLowerCase();\r\n            if (typeof windowEventHandlers[e] != 'undefined') {\r\n                windowEventHandlers[e].subscribe(handler);\r\n            } else {\r\n                m_window_addEventListener.call(window, evt, handler, capture);\r\n            }\r\n        };\r\n\r\n        document.removeEventListener = function(evt, handler, capture) {\r\n            var e = evt.toLowerCase();\r\n            // If unsubscribing from an event that is handled by a plugin\r\n            if (typeof documentEventHandlers[e] != \"undefined\") {\r\n                documentEventHandlers[e].unsubscribe(handler);\r\n            } else {\r\n                m_document_removeEventListener.call(document, evt, handler, capture);\r\n            }\r\n        };\r\n\r\n        window.removeEventListener = function(evt, handler, capture) {\r\n            var e = evt.toLowerCase();\r\n            // If unsubscribing from an event that is handled by a plugin\r\n            if (typeof windowEventHandlers[e] != \"undefined\") {\r\n                windowEventHandlers[e].unsubscribe(handler);\r\n            } else {\r\n                m_window_removeEventListener.call(window, evt, handler, capture);\r\n            }\r\n        };\r\n\r\n        function createEvent(type, data) {\r\n            var event = document.createEvent('Events');\r\n            event.initEvent(type, false, false);\r\n            if (data) {\r\n                for (var i in data) {\r\n                    if (data.hasOwnProperty(i)) {\r\n                        event[i] = data[i];\r\n                    }\r\n                }\r\n            }\r\n            return event;\r\n        }\r\n\r\n        var cordova = {\r\n            define: define,\r\n            require: require,\r\n            version: PLATFORM_VERSION_BUILD_LABEL,\r\n            platformVersion: PLATFORM_VERSION_BUILD_LABEL,\r\n            platformId: platform.id,\r\n            /**\r\n             * Methods to add/remove your own addEventListener hijacking on document + window.\r\n             */\r\n            addWindowEventHandler: function(event) {\r\n                return (windowEventHandlers[event] = channel.create(event));\r\n            },\r\n            addStickyDocumentEventHandler: function(event) {\r\n                return (documentEventHandlers[event] = channel.createSticky(event));\r\n            },\r\n            addDocumentEventHandler: function(event) {\r\n                return (documentEventHandlers[event] = channel.create(event));\r\n            },\r\n            removeWindowEventHandler: function(event) {\r\n                delete windowEventHandlers[event];\r\n            },\r\n            removeDocumentEventHandler: function(event) {\r\n                delete documentEventHandlers[event];\r\n            },\r\n            /**\r\n             * Method to fire event from native code\r\n             * bNoDetach is required for events which cause an exception which needs to be caught in native code\r\n             */\r\n            fireDocumentEvent: function(type, data, bNoDetach) {\r\n                var evt = createEvent(type, data);\r\n                if (typeof documentEventHandlers[type] != 'undefined') {\r\n                    if (bNoDetach) {\r\n                        documentEventHandlers[type].fire(evt);\r\n                    } else {\r\n                        setTimeout(function() {\r\n                            // Fire deviceready on listeners that were registered before cordova.js was loaded.\r\n                            if (type == 'deviceready') {\r\n                                document.dispatchEvent(evt);\r\n                            }\r\n                            documentEventHandlers[type].fire(evt);\r\n                        }, 0);\r\n                    }\r\n                } else {\r\n                    document.dispatchEvent(evt);\r\n                }\r\n            },\r\n            fireWindowEvent: function(type, data) {\r\n                var evt = createEvent(type, data);\r\n                if (typeof windowEventHandlers[type] != 'undefined') {\r\n                    setTimeout(function() {\r\n                        windowEventHandlers[type].fire(evt);\r\n                    }, 0);\r\n                } else {\r\n                    window.dispatchEvent(evt);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Plugin callback mechanism.\r\n             */\r\n            // Randomize the starting callbackId to avoid collisions after refreshing or navigating.\r\n            // This way, it's very unlikely that any new callback would get the same callbackId as an old callback.\r\n            callbackId: Math.floor(Math.random() * 2000000000),\r\n            callbacks: {},\r\n            callbackStatus: {\r\n                NO_RESULT: 0,\r\n                OK: 1,\r\n                CLASS_NOT_FOUND_EXCEPTION: 2,\r\n                ILLEGAL_ACCESS_EXCEPTION: 3,\r\n                INSTANTIATION_EXCEPTION: 4,\r\n                MALFORMED_URL_EXCEPTION: 5,\r\n                IO_EXCEPTION: 6,\r\n                INVALID_ACTION: 7,\r\n                JSON_EXCEPTION: 8,\r\n                ERROR: 9\r\n            },\r\n\r\n            /**\r\n             * Called by native code when returning successful result from an action.\r\n             */\r\n            callbackSuccess: function(callbackId, args) {\r\n                cordova.callbackFromNative(callbackId, true, args.status, [args.message], args.keepCallback);\r\n            },\r\n\r\n            /**\r\n             * Called by native code when returning error result from an action.\r\n             */\r\n            callbackError: function(callbackId, args) {\r\n                // TODO: Deprecate callbackSuccess and callbackError in favour of callbackFromNative.\r\n                // Derive success from status.\r\n                cordova.callbackFromNative(callbackId, false, args.status, [args.message], args.keepCallback);\r\n            },\r\n\r\n            /**\r\n             * Called by native code when returning the result from an action.\r\n             */\r\n            callbackFromNative: function(callbackId, isSuccess, status, args, keepCallback) {\r\n                try {\r\n                    var callback = cordova.callbacks[callbackId];\r\n                    if (callback) {\r\n                        if (isSuccess && status == cordova.callbackStatus.OK) {\r\n                            callback.success && callback.success.apply(null, args);\r\n                        } else if (!isSuccess) {\r\n                            callback.fail && callback.fail.apply(null, args);\r\n                        }\r\n                        /*\r\n                        else\r\n                            Note, this case is intentionally not caught.\r\n                            this can happen if isSuccess is true, but callbackStatus is NO_RESULT\r\n                            which is used to remove a callback from the list without calling the callbacks\r\n                            typically keepCallback is false in this case\r\n                        */\r\n                        // Clear callback if not expecting any more results\r\n                        if (!keepCallback) {\r\n                            delete cordova.callbacks[callbackId];\r\n                        }\r\n                    }\r\n                } catch(err) {\r\n                    var msg = \"Error in \" + (isSuccess ? \"Success\": \"Error\") + \" callbackId: \" + callbackId + \" : \" + err;\r\n                    console && console.log && console.log(msg);\r\n                    cordova.fireWindowEvent(\"cordovacallbackerror\", {\r\n                        'message': msg\r\n                    });\r\n                    throw err;\r\n                }\r\n            }\r\n        };\r\n\r\n        module.exports = cordova;\r\n\r\n    });\r\n\r\n    // file: /Users/steveng/repo/cordova/cordova-android/cordova-js-src/android/nativeapiprovider.js\r\n    define(\"cordova/android/nativeapiprovider\", function(require, exports, module) {\r\n\r\n        /**\r\n         * Exports the ExposedJsApi.java object if available, otherwise exports the PromptBasedNativeApi.\r\n         */\r\n\r\n        var nativeApi = this._cordovaNative || require('cordova/android/promptbasednativeapi');\r\n        var currentApi = nativeApi;\r\n\r\n        module.exports = {\r\n            get: function() {\r\n                return currentApi;\r\n            },\r\n            setPreferPrompt: function(value) {\r\n                currentApi = value ? require('cordova/android/promptbasednativeapi') : nativeApi;\r\n            },\r\n            // Used only by tests.\r\n            set: function(value) {\r\n                currentApi = value;\r\n            }\r\n        };\r\n\r\n    });\r\n\r\n    // file: /Users/steveng/repo/cordova/cordova-android/cordova-js-src/android/promptbasednativeapi.js\r\n    define(\"cordova/android/promptbasednativeapi\", function(require, exports, module) {\r\n\r\n        /**\r\n         * Implements the API of ExposedJsApi.java, but uses prompt() to communicate.\r\n         * This is used pre-JellyBean, where addJavascriptInterface() is disabled.\r\n         */\r\n\r\n        module.exports = {\r\n            exec: function(bridgeSecret, service, action, callbackId, argsJson) {\r\n                return prompt(argsJson, 'gap:' + JSON.stringify([bridgeSecret, service, action, callbackId]));\r\n            },\r\n            setNativeToJsBridgeMode: function(bridgeSecret, value) {\r\n                prompt(value, 'gap_bridge_mode:' + bridgeSecret);\r\n            },\r\n            retrieveJsMessages: function(bridgeSecret, fromOnlineEvent) {\r\n                return prompt( + fromOnlineEvent, 'gap_poll:' + bridgeSecret);\r\n            }\r\n        };\r\n\r\n    });\r\n    // file: src/common/base64.js\r\n    define(\"cordova/base64\", function(require, exports, module) {\r\n\r\n        var base64 = exports;\r\n\r\n        base64.fromArrayBuffer = function(arrayBuffer) {\r\n            var array = new Uint8Array(arrayBuffer);\r\n            return uint8ToBase64(array);\r\n        };\r\n\r\n        base64.toArrayBuffer = function(str) {\r\n            var decodedStr = typeof atob != 'undefined' ? atob(str) : new Buffer(str,'base64').toString('binary');\r\n            var arrayBuffer = new ArrayBuffer(decodedStr.length);\r\n            var array = new Uint8Array(arrayBuffer);\r\n            for (var i=0, len=decodedStr.length; i < len; i++) {\r\n                array[i] = decodedStr.charCodeAt(i);\r\n            }\r\n            return arrayBuffer;\r\n        };\r\n\r\n\r\n        function uint8ToBase64(rawData) {\r\n            var numBytes = rawData.byteLength;\r\n            var output=\"\";\r\n            var segment;\r\n            var table = b64_12bitTable();\r\n            for (var i=0;i<numBytes-2;i+=3) {\r\n                segment = (rawData[i] << 16) + (rawData[i+1] << 8) + rawData[i+2];\r\n                output += table[segment >> 12];\r\n                output += table[segment & 0xfff];\r\n            }\r\n            if (numBytes - i == 2) {\r\n                segment = (rawData[i] << 16) + (rawData[i+1] << 8);\r\n                output += table[segment >> 12];\r\n                output += b64_6bit[(segment & 0xfff) >> 6];\r\n                output += '=';\r\n            } else if (numBytes - i == 1) {\r\n                segment = (rawData[i] << 16);\r\n                output += table[segment >> 12];\r\n                output += '==';\r\n            }\r\n            return output;\r\n        }\r\n\r\n    });\r\n    // file: src/common/channel.js\r\n    define(\"cordova/channel\", function(require, exports, module) {\r\n\r\n        var utils = require('cordova/utils'),\r\n        nextGuid = 1;\r\n        /**\r\n         * Custom pub-sub \"channel\" that can have functions subscribed to it\r\n         * This object is used to define and control firing of events for\r\n         * cordova initialization, as well as for custom events thereafter.\r\n         *\r\n         * The order of events during page load and Cordova startup is as follows:\r\n         *\r\n         * onDOMContentLoaded*         Internal event that is received when the web page is loaded and parsed.\r\n         * onNativeReady*              Internal event that indicates the Cordova native side is ready.\r\n         * onCordovaReady*             Internal event fired when all Cordova JavaScript objects have been created.\r\n         * onDeviceReady*              User event fired to indicate that Cordova is ready\r\n         * onResume                    User event fired to indicate a start/resume lifecycle event\r\n         * onPause                     User event fired to indicate a pause lifecycle event\r\n         *\r\n         * The events marked with an * are sticky. Once they have fired, they will stay in the fired state.\r\n         * All listeners that subscribe after the event is fired will be executed right away.\r\n         *\r\n         * The only Cordova events that user code should register for are:\r\n         *      deviceready           Cordova native code is initialized and Cordova APIs can be called from JavaScript\r\n         *      pause                 App has moved to background\r\n         *      resume                App has returned to foreground\r\n         *\r\n         * Listeners can be registered as:\r\n         *      document.addEventListener(\"deviceready\", myDeviceReadyListener, false);\r\n         *      document.addEventListener(\"resume\", myResumeListener, false);\r\n         *      document.addEventListener(\"pause\", myPauseListener, false);\r\n         *\r\n         * The DOM lifecycle events should be used for saving and restoring state\r\n         *      window.onload\r\n         *      window.onunload\r\n         *\r\n         */\r\n\r\n        /**\r\n         * Channel\r\n         * @constructor\r\n         * @param type  String the channel name\r\n         */\r\n\r\n        var Channel = function(type, sticky) {\r\n            this.type = type;\r\n            // Map of guid -> function. \r\n            this.handlers = {};\r\n            // 0 = Non-sticky, 1 = Sticky non-fired, 2 = Sticky fired.\r\n            this.state = sticky ? 1 : 0;\r\n            // Used in sticky mode to remember args passed to fire().\r\n            this.fireArgs = null;\r\n            // Used by onHasSubscribersChange to know if there are any listeners.\r\n            this.numHandlers = 0;\r\n            // Function that is called when the first listener is subscribed, or when\r\n            // the last listener is unsubscribed.\r\n            this.onHasSubscribersChange = null;\r\n        },\r\n        channel = {\r\n            /**\r\n             * Calls the provided function only after all of the channels specified\r\n             * have been fired. All channels must be sticky channels.\r\n             */\r\n            join: function(h, c) {\r\n                var len = c.length,\r\n                i = len,\r\n                f = function() {\r\n                    if (! (--i)) h();\r\n                };\r\n                for (var j = 0; j < len; j++) {\r\n                    if (c[j].state === 0) {\r\n                        throw Error('Can only use join with sticky channels.');\r\n                    }\r\n                    c[j].subscribe(f);\r\n                }\r\n                if (!len) h();\r\n            },\r\n            create: function(type) {\r\n                return channel[type] = new Channel(type, false);\r\n            },\r\n            createSticky: function(type) {\r\n                return channel[type] = new Channel(type, true);\r\n            },\r\n\r\n            /**\r\n             * cordova Channels that must fire before \"deviceready\" is fired.\r\n             */\r\n            deviceReadyChannelsArray: [],\r\n            deviceReadyChannelsMap: {},\r\n\r\n            /**\r\n             * Indicate that a feature needs to be initialized before it is ready to be used.\r\n             * This holds up Cordova's \"deviceready\" event until the feature has been initialized\r\n             * and Cordova.initComplete(feature) is called.\r\n             *\r\n             * @param feature {String}     The unique feature name\r\n             */\r\n            waitForInitialization: function(feature) {\r\n                if (feature) {\r\n                    var c = channel[feature] || this.createSticky(feature);\r\n                    this.deviceReadyChannelsMap[feature] = c;\r\n                    this.deviceReadyChannelsArray.push(c);\r\n                }\r\n            }\r\n        };\r\n\r\n        function forceFunction(f) {\r\n            if (typeof f != 'function') throw \"Function required as first argument!\";\r\n        }\r\n\r\n        /**\r\n         * Subscribes the given function to the channel. Any time that\r\n         * Channel.fire is called so too will the function.\r\n         * Optionally specify an execution context for the function\r\n         * and a guid that can be used to stop subscribing to the channel.\r\n         * Returns the guid.\r\n         */\r\n        Channel.prototype.subscribe = function(f, c) {\r\n            // need a function to call\r\n            forceFunction(f);\r\n            if (this.state == 2) {\r\n                f.apply(c || this, this.fireArgs);\r\n                return;\r\n            }\r\n\r\n            var func = f,\r\n            guid = f.observer_guid;\r\n            if (typeof c == \"object\") {\r\n                func = utils.close(c, f);\r\n            }\r\n\r\n            if (!guid) {\r\n                // first time any channel has seen this subscriber\r\n                guid = '' + nextGuid++;\r\n            }\r\n            func.observer_guid = guid;\r\n            f.observer_guid = guid;\r\n\r\n            // Don't add the same handler more than once.\r\n            if (!this.handlers[guid]) {\r\n                this.handlers[guid] = func;\r\n                this.numHandlers++;\r\n                if (this.numHandlers == 1) {\r\n                    this.onHasSubscribersChange && this.onHasSubscribersChange();\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Unsubscribes the function with the given guid from the channel.\r\n         */\r\n        Channel.prototype.unsubscribe = function(f) {\r\n            // need a function to unsubscribe\r\n            forceFunction(f);\r\n\r\n            var guid = f.observer_guid,\r\n            handler = this.handlers[guid];\r\n            if (handler) {\r\n                delete this.handlers[guid];\r\n                this.numHandlers--;\r\n                if (this.numHandlers === 0) {\r\n                    this.onHasSubscribersChange && this.onHasSubscribersChange();\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Calls all functions subscribed to this channel.\r\n         */\r\n        Channel.prototype.fire = function(e) {\r\n            var fail = false,\r\n            fireArgs = Array.prototype.slice.call(arguments);\r\n            // Apply stickiness.\r\n            if (this.state == 1) {\r\n                this.state = 2;\r\n                this.fireArgs = fireArgs;\r\n            }\r\n            if (this.numHandlers) {\r\n                // Copy the values first so that it is safe to modify it from within\r\n                // callbacks.\r\n                var toCall = [];\r\n                for (var item in this.handlers) {\r\n                    toCall.push(this.handlers[item]);\r\n                }\r\n                for (var i = 0; i < toCall.length; ++i) {\r\n                    toCall[i].apply(this, fireArgs);\r\n                }\r\n                if (this.state == 2 && this.numHandlers) {\r\n                    this.numHandlers = 0;\r\n                    this.handlers = {};\r\n                    this.onHasSubscribersChange && this.onHasSubscribersChange();\r\n                }\r\n            }\r\n        };\r\n\r\n        // defining them here so they are ready super fast!\r\n        // DOM event that is received when the web page is loaded and parsed.\r\n        channel.createSticky('onDOMContentLoaded');\r\n\r\n        // Event to indicate the Cordova native side is ready.\r\n        channel.createSticky('onNativeReady');\r\n\r\n        // Event to indicate that all Cordova JavaScript objects have been created\r\n        // and it's time to run plugin constructors.\r\n        channel.createSticky('onCordovaReady');\r\n\r\n        // Event to indicate that Cordova is ready\r\n        channel.createSticky('onDeviceReady');\r\n\r\n        // Event to indicate a resume lifecycle event\r\n        channel.create('onResume');\r\n\r\n        // Event to indicate a pause lifecycle event\r\n        channel.create('onPause');\r\n\r\n        // Channels that must fire before \"deviceready\" is fired.\r\n        channel.waitForInitialization('onCordovaReady');\r\n        channel.waitForInitialization('onDOMContentLoaded');\r\n\r\n        module.exports = channel;\r\n\r\n    });\r\n\r\n    // file: /Users/steveng/repo/cordova/cordova-android/cordova-js-src/exec.js\r\n    define(\"cordova/exec\", function(require, exports, module) {\r\n        var platform = require('cordova/platform')       \r\n        if(platform.id == 'android'){\r\n            module.exports = require('cordova/moudleANDExec')\r\n        }else{\r\n            module.exports = require('cordova/moudleIOSExec')\r\n        }\r\n    });\r\n    define(\"cordova/moudleANDExec\", function(require, exports, module){\r\n        /**\r\n         * Execute a cordova command.  It is up to the native side whether this action\r\n         * is synchronous or asynchronous.  The native side can return:\r\n         *      Synchronous: PluginResult object as a JSON string\r\n         *      Asynchronous: Empty string \"\"\r\n         * If async, the native side will cordova.callbackSuccess or cordova.callbackError,\r\n         * depending upon the result of the action.\r\n         *\r\n         * @param {Function} success    The success callback\r\n         * @param {Function} fail       The fail callback\r\n         * @param {String} service      The name of the service to use\r\n         * @param {String} action       Action to be run in cordova\r\n         * @param {String[]} [args]     Zero or more arguments to pass to the method\r\n         */\r\n        var cordova = require('cordova'),\r\n        nativeApiProvider = require('cordova/android/nativeapiprovider'),\r\n        utils = require('cordova/utils'),\r\n        base64 = require('cordova/base64'),\r\n        channel = require('cordova/channel'),\r\n        jsToNativeModes = {\r\n            PROMPT: 0,\r\n            JS_OBJECT: 1\r\n        },\r\n        nativeToJsModes = {\r\n            // Polls for messages using the JS->Native bridge.\r\n            POLLING: 0,\r\n            // For LOAD_URL to be viable, it would need to have a work-around for\r\n            // the bug where the soft-keyboard gets dismissed when a message is sent.\r\n            LOAD_URL: 1,\r\n            // For the ONLINE_EVENT to be viable, it would need to intercept all event\r\n            // listeners (both through addEventListener and window.ononline) as well\r\n            // as set the navigator property itself.\r\n            ONLINE_EVENT: 2\r\n        },\r\n        jsToNativeBridgeMode,\r\n        // Set lazily.\r\n        nativeToJsBridgeMode = nativeToJsModes.ONLINE_EVENT,\r\n        pollEnabled = false,\r\n        bridgeSecret = -1;\r\n\r\n        var messagesFromNative = [];\r\n        var isProcessing = false;\r\n        var resolvedPromise = typeof Promise == 'undefined' ? null: Promise.resolve();\r\n        var nextTick = resolvedPromise ?\r\n        function(fn) {\r\n            resolvedPromise.then(fn);\r\n        }: function(fn) {\r\n            setTimeout(fn);\r\n        };\r\n\r\n        function androidExec(success, fail, service, action, args) {\r\n            if (bridgeSecret < 0) {\r\n                // If we ever catch this firing, we'll need to queue up exec()s\r\n                // and fire them once we get a secret. For now, I don't think\r\n                // it's possible for exec() to be called since plugins are parsed but\r\n                // not run until until after onNativeReady.\r\n                throw new Error('exec() called without bridgeSecret');\r\n            }\r\n            // Set default bridge modes if they have not already been set.\r\n            // By default, we use the failsafe, since addJavascriptInterface breaks too often\r\n            if (jsToNativeBridgeMode === undefined) {\r\n                androidExec.setJsToNativeBridgeMode(jsToNativeModes.JS_OBJECT);\r\n            }\r\n\r\n            var callbackId = service + cordova.callbackId++,\r\n            argsJson = JSON.stringify(args);\r\n\r\n            if (success || fail) {\r\n                cordova.callbacks[callbackId] = {\r\n                    success: success,\r\n                    fail: fail\r\n                };\r\n            }\r\n\r\n            var msgs = nativeApiProvider.get().exec(bridgeSecret, service, action, callbackId, argsJson);\r\n            // If argsJson was received by Java as null, try again with the PROMPT bridge mode.\r\n            // This happens in rare circumstances, such as when certain Unicode characters are passed over the bridge on a Galaxy S2.  See CB-2666.\r\n            if (jsToNativeBridgeMode == jsToNativeModes.JS_OBJECT && msgs === \"@Null arguments.\") {\r\n                androidExec.setJsToNativeBridgeMode(jsToNativeModes.PROMPT);//0\r\n                androidExec(success, fail, service, action, args);\r\n                androidExec.setJsToNativeBridgeMode(jsToNativeModes.JS_OBJECT);//1\r\n            } else if (msgs) {\r\n                messagesFromNative.push(msgs);\r\n                // Always process async to avoid exceptions messing up stack.\r\n                nextTick(processMessages);\r\n            }\r\n        }\r\n\r\n        androidExec.init = function() {\r\n            bridgeSecret = +prompt('', 'gap_init:' + nativeToJsBridgeMode);\r\n            channel.onNativeReady.fire();\r\n        };\r\n\r\n        function pollOnceFromOnlineEvent() {\r\n            pollOnce(true);\r\n        }\r\n        function pollOnce(opt_fromOnlineEvent) {\r\n            if (bridgeSecret < 0) {\r\n                // This can happen when the NativeToJsMessageQueue resets the online state on page transitions.\r\n                // We know there's nothing to retrieve, so no need to poll.\r\n                return;\r\n            }\r\n            var msgs = nativeApiProvider.get().retrieveJsMessages(bridgeSecret, !!opt_fromOnlineEvent);\r\n            if (msgs) {\r\n                messagesFromNative.push(msgs);\r\n                // Process sync since we know we're already top-of-stack.\r\n                processMessages();\r\n            }\r\n        }\r\n\r\n        function pollingTimerFunc() {\r\n            if (pollEnabled) {\r\n                pollOnce();\r\n                setTimeout(pollingTimerFunc, 50);\r\n            }\r\n        }\r\n        function hookOnlineApis() {\r\n            function proxyEvent(e) {\r\n                cordova.fireWindowEvent(e.type);\r\n            }\r\n            // The network module takes care of firing online and offline events.\r\n            // It currently fires them only on document though, so we bridge them\r\n            // to window here (while first listening for exec()-releated online/offline\r\n            // events).\r\n            window.addEventListener('online', pollOnceFromOnlineEvent, false);\r\n            window.addEventListener('offline', pollOnceFromOnlineEvent, false);\r\n            cordova.addWindowEventHandler('online');\r\n            cordova.addWindowEventHandler('offline');\r\n            document.addEventListener('online', proxyEvent, false);\r\n            document.addEventListener('offline', proxyEvent, false);\r\n        }\r\n\r\n        hookOnlineApis();\r\n        androidExec.jsToNativeModes = jsToNativeModes;\r\n        androidExec.nativeToJsModes = nativeToJsModes;\r\n\r\n        androidExec.setJsToNativeBridgeMode = function(mode) {\r\n            if (mode == jsToNativeModes.JS_OBJECT && !window._cordovaNative) {\r\n                mode = jsToNativeModes.PROMPT;\r\n            }\r\n            nativeApiProvider.setPreferPrompt(mode == jsToNativeModes.PROMPT);\r\n            jsToNativeBridgeMode = mode;\r\n        };\r\n\r\n        androidExec.setNativeToJsBridgeMode = function(mode) {\r\n            if (mode == nativeToJsBridgeMode) {\r\n                return;\r\n            }\r\n            if (nativeToJsBridgeMode == nativeToJsModes.POLLING) {\r\n                pollEnabled = false;\r\n            }\r\n\r\n            nativeToJsBridgeMode = mode;\r\n            // Tell the native side to switch modes.\r\n            // Otherwise, it will be set by androidExec.init()\r\n            if (bridgeSecret >= 0) {\r\n                nativeApiProvider.get().setNativeToJsBridgeMode(bridgeSecret, mode);\r\n            }\r\n\r\n            if (mode == nativeToJsModes.POLLING) {\r\n                pollEnabled = true;\r\n                setTimeout(pollingTimerFunc, 1);\r\n            }\r\n        };\r\n\r\n        function buildPayload(payload, message) {\r\n            var payloadKind = message.charAt(0);\r\n            if (payloadKind == 's') {\r\n                payload.push(message.slice(1));\r\n            } else if (payloadKind == 't') {\r\n                payload.push(true);\r\n            } else if (payloadKind == 'f') {\r\n                payload.push(false);\r\n            } else if (payloadKind == 'N') {\r\n                payload.push(null);\r\n            } else if (payloadKind == 'n') {\r\n                payload.push( + message.slice(1));\r\n            } else if (payloadKind == 'A') {\r\n                var data = message.slice(1);\r\n                payload.push(base64.toArrayBuffer(data));\r\n            } else if (payloadKind == 'S') {\r\n                payload.push(window.atob(message.slice(1)));\r\n            } else if (payloadKind == 'M') {\r\n                var multipartMessages = message.slice(1);\r\n                while (multipartMessages !== \"\") {\r\n                    var spaceIdx = multipartMessages.indexOf(' ');\r\n                    var msgLen = +multipartMessages.slice(0, spaceIdx);\r\n                    var multipartMessage = multipartMessages.substr(spaceIdx + 1, msgLen);\r\n                    multipartMessages = multipartMessages.slice(spaceIdx + msgLen + 1);\r\n                    buildPayload(payload, multipartMessage);\r\n                }\r\n            } else {\r\n                payload.push(JSON.parse(message));\r\n            }\r\n        }\r\n\r\n        // Processes a single message, as encoded by NativeToJsMessageQueue.java.\r\n        function processMessage(message) {\r\n            var firstChar = message.charAt(0);\r\n            if (firstChar == 'J') {\r\n                // This is deprecated on the .java side. It doesn't work with CSP enabled.\r\n                eval(message.slice(1));\r\n            } else if (firstChar == 'S' || firstChar == 'F') {\r\n                var success = firstChar == 'S';\r\n                var keepCallback = message.charAt(1) == '1';\r\n                var spaceIdx = message.indexOf(' ', 2);\r\n                var status = +message.slice(2, spaceIdx);\r\n                var nextSpaceIdx = message.indexOf(' ', spaceIdx + 1);\r\n                var callbackId = message.slice(spaceIdx + 1, nextSpaceIdx);\r\n                var payloadMessage = message.slice(nextSpaceIdx + 1);\r\n                var payload = [];\r\n                buildPayload(payload, payloadMessage);\r\n                cordova.callbackFromNative(callbackId, success, status, payload, keepCallback);\r\n            } else {\r\n                console.log(\"processMessage failed: invalid message: \" + JSON.stringify(message));\r\n            }\r\n        }\r\n\r\n        function processMessages() {\r\n            // Check for the reentrant case.\r\n            if (isProcessing) {\r\n                return;\r\n            }\r\n            if (messagesFromNative.length === 0) {\r\n                return;\r\n            }\r\n            isProcessing = true;\r\n            try {\r\n                var msg = popMessageFromQueue();\r\n                // The Java side can send a * message to indicate that it\r\n                // still has messages waiting to be retrieved.\r\n                if (msg == '*' && messagesFromNative.length === 0) {\r\n                    nextTick(pollOnce);\r\n                    return;\r\n                }\r\n                processMessage(msg);\r\n            } finally {\r\n                isProcessing = false;\r\n                if (messagesFromNative.length > 0) {\r\n                    nextTick(processMessages);\r\n                }\r\n            }\r\n        }\r\n\r\n        function popMessageFromQueue() {\r\n            var messageBatch = messagesFromNative.shift();\r\n            if (messageBatch == '*') {\r\n                return '*';\r\n            }\r\n\r\n            var spaceIdx = messageBatch.indexOf(' ');\r\n            var msgLen = +messageBatch.slice(0, spaceIdx);\r\n            var message = messageBatch.substr(spaceIdx + 1, msgLen);\r\n            messageBatch = messageBatch.slice(spaceIdx + msgLen + 1);\r\n            if (messageBatch) {\r\n                messagesFromNative.unshift(messageBatch);\r\n            }\r\n            return message;\r\n        }\r\n\r\n        module.exports = androidExec;\r\n    });\r\n    define(\"cordova/moudleIOSExec\", function(require, exports, module){\r\n       /**\r\n         * Creates a gap bridge iframe used to notify the native code about queued\r\n         * commands.\r\n         */\r\n        var cordova = require('cordova'),\r\n            channel = require('cordova/channel'),\r\n            utils = require('cordova/utils'),\r\n            base64 = require('cordova/base64'),\r\n            // XHR mode does not work on iOS 4.2.\r\n            // XHR mode's main advantage is working around a bug in -webkit-scroll, which\r\n            // doesn't exist only on iOS 5.x devices.\r\n            // IFRAME_NAV is the fastest.\r\n            // IFRAME_HASH could be made to enable synchronous bridge calls if we wanted this feature.\r\n            jsToNativeModes = {\r\n                IFRAME_NAV: 0, // Default. Uses a new iframe for each poke.\r\n                // XHR bridge appears to be flaky sometimes: CB-3900, CB-3359, CB-5457, CB-4970, CB-4998, CB-5134\r\n                XHR_NO_PAYLOAD: 1, // About the same speed as IFRAME_NAV. Performance not about the same as IFRAME_NAV, but more variable.\r\n                XHR_WITH_PAYLOAD: 2, // Flakey, and not as performant\r\n                XHR_OPTIONAL_PAYLOAD: 3, // Flakey, and not as performant\r\n                IFRAME_HASH_NO_PAYLOAD: 4, // Not fully baked. A bit faster than IFRAME_NAV, but risks jank since poke happens synchronously.\r\n                IFRAME_HASH_WITH_PAYLOAD: 5, // Slower than no payload. Maybe since it has to be URI encoded / decoded.\r\n                WK_WEBVIEW_BINDING: 6 // Only way that works for WKWebView :)\r\n            },\r\n            bridgeMode,\r\n            execXhr,\r\n            requestCount = 0,\r\n            vcHeaderValue = null,\r\n            commandQueue = [], // Contains pending JS->Native messages.\r\n            isInContextOfEvalJs = 0,\r\n            failSafeTimerId = 0;\r\n\r\n        function shouldBundleCommandJson() {\r\n            if (bridgeMode === jsToNativeModes.XHR_WITH_PAYLOAD) {\r\n                return true;\r\n            }\r\n            if (bridgeMode === jsToNativeModes.XHR_OPTIONAL_PAYLOAD) {\r\n                var payloadLength = 0;\r\n                for (var i = 0; i < commandQueue.length; ++i) {\r\n                    payloadLength += commandQueue[i].length;\r\n                }\r\n                // The value here was determined using the benchmark within CordovaLibApp on an iPad 3.\r\n                return payloadLength < 4500;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        function massageArgsJsToNative(args) {\r\n            if (!args || utils.typeName(args) != 'Array') {\r\n                return args;\r\n            }\r\n            var ret = [];\r\n            args.forEach(function(arg, i) {\r\n                if (utils.typeName(arg) == 'ArrayBuffer') {\r\n                    ret.push({\r\n                        'CDVType': 'ArrayBuffer',\r\n                        'data': base64.fromArrayBuffer(arg)\r\n                    });\r\n                } else {\r\n                    ret.push(arg);\r\n                }\r\n            });\r\n            return ret;\r\n        }\r\n\r\n        function massageMessageNativeToJs(message) {\r\n            if (message.CDVType == 'ArrayBuffer') {\r\n                var stringToArrayBuffer = function(str) {\r\n                    var ret = new Uint8Array(str.length);\r\n                    for (var i = 0; i < str.length; i++) {\r\n                        ret[i] = str.charCodeAt(i);\r\n                    }\r\n                    return ret.buffer;\r\n                };\r\n                var base64ToArrayBuffer = function(b64) {\r\n                    return stringToArrayBuffer(atob(b64));\r\n                };\r\n                message = base64ToArrayBuffer(message.data);\r\n            }\r\n            return message;\r\n        }\r\n\r\n        function convertMessageToArgsNativeToJs(message) {\r\n            var args = [];\r\n            if (!message || !message.hasOwnProperty('CDVType')) {\r\n                args.push(message);\r\n            } else if (message.CDVType == 'MultiPart') {\r\n                message.messages.forEach(function(e) {\r\n                    args.push(massageMessageNativeToJs(e));\r\n                });\r\n            } else {\r\n                args.push(massageMessageNativeToJs(message));\r\n            }\r\n            return args;\r\n        }\r\n\r\n        function iOSExec() {\r\n            if (bridgeMode === undefined) {\r\n                bridgeMode = jsToNativeModes.IFRAME_NAV;\r\n            }\r\n\r\n            if (window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.cordova && window.webkit.messageHandlers.cordova.postMessage) {\r\n                bridgeMode = jsToNativeModes.WK_WEBVIEW_BINDING;\r\n            }\r\n\r\n            var successCallback, failCallback, service, action, actionArgs, splitCommand;\r\n            var callbackId = null;\r\n            if (typeof arguments[0] !== \"string\") {\r\n                // FORMAT ONE\r\n                successCallback = arguments[0];\r\n                failCallback = arguments[1];\r\n                service = arguments[2];\r\n                action = arguments[3];\r\n                actionArgs = arguments[4];\r\n\r\n                // Since we need to maintain backwards compatibility, we have to pass\r\n                // an invalid callbackId even if no callback was provided since plugins\r\n                // will be expecting it. The Cordova.exec() implementation allocates\r\n                // an invalid callbackId and passes it even if no callbacks were given.\r\n                callbackId = 'INVALID';\r\n            } else {\r\n                // FORMAT TWO, REMOVED\r\n                try {\r\n                    splitCommand = arguments[0].split(\".\");\r\n                    action = splitCommand.pop();\r\n                    service = splitCommand.join(\".\");\r\n                    actionArgs = Array.prototype.splice.call(arguments, 1);\r\n\r\n                    console.log('The old format of this exec call has been removed (deprecated since 2.1). Change to: ' +\r\n                            \"cordova.exec(null, null, \\\"\" + service + \"\\\", \\\"\" + action + \"\\\",\" + JSON.stringify(actionArgs) + \");\"\r\n                    );\r\n                    return;\r\n                } catch (e) {}\r\n            }\r\n\r\n            // If actionArgs is not provided, default to an empty array\r\n            actionArgs = actionArgs || [];\r\n\r\n            // Register the callbacks and add the callbackId to the positional\r\n            // arguments if given.\r\n            if (successCallback || failCallback) {\r\n                callbackId = service + cordova.callbackId++;\r\n                cordova.callbacks[callbackId] =\r\n                    {success:successCallback, fail:failCallback};\r\n            }\r\n\r\n            actionArgs = massageArgsJsToNative(actionArgs);\r\n\r\n            var command = [callbackId, service, action, actionArgs];\r\n\r\n            // Stringify and queue the command. We stringify to command now to\r\n            // effectively clone the command arguments in case they are mutated before\r\n            // the command is executed.\r\n            commandQueue.push(JSON.stringify(command));\r\n            \r\n            if (bridgeMode === jsToNativeModes.WK_WEBVIEW_BINDING) {\r\n                window.webkit.messageHandlers.cordova.postMessage(command);\r\n            } else {\r\n                // If we're in the context of a stringByEvaluatingJavaScriptFromString call,\r\n                // then the queue will be flushed when it returns; no need for a poke.\r\n                // Also, if there is already a command in the queue, then we've already\r\n                // poked the native side, so there is no reason to do so again.\r\n                if (!isInContextOfEvalJs && commandQueue.length == 1) {\r\n                    // pokeNative();\r\n                    pokeNativeViaXhr();\r\n                }\r\n            }\r\n        }\r\n\r\n        function pokeNativeViaXhr() {\r\n            // This prevents sending an XHR when there is already one being sent.\r\n            // This should happen only in rare circumstances (refer to unit tests).\r\n            if (execXhr && execXhr.readyState != 4) {\r\n                execXhr = null;\r\n            }\r\n            // Re-using the XHR improves exec() performance by about 10%.\r\n            execXhr = execXhr || new XMLHttpRequest();\r\n            // Changing this to a GET will make the XHR reach the URIProtocol on 4.2.\r\n            // For some reason it still doesn't work though...\r\n            // Add a timestamp to the query param to prevent caching.\r\n            execXhr.open('HEAD', \"/!gap_exec?\" + (+new Date()), true);\r\n            if (!vcHeaderValue) {\r\n                vcHeaderValue = /.*\\((.*)\\)$/.exec(navigator.userAgent)[1];\r\n            }\r\n            execXhr.setRequestHeader('vc', vcHeaderValue);\r\n            execXhr.setRequestHeader('rc', ++requestCount);\r\n            if (shouldBundleCommandJson()) {\r\n                execXhr.setRequestHeader('cmds', iOSExec.nativeFetchMessages());\r\n            }\r\n            execXhr.send(null);\r\n        }\r\n\r\n        iOSExec.jsToNativeModes = jsToNativeModes;\r\n\r\n\r\n        iOSExec.nativeFetchMessages = function() {\r\n            // Stop listing for window detatch once native side confirms poke.\r\n            if (failSafeTimerId) {\r\n                clearTimeout(failSafeTimerId);\r\n                failSafeTimerId = 0;\r\n            }\r\n            // Each entry in commandQueue is a JSON string already.\r\n            if (!commandQueue.length) {\r\n                return '';\r\n            }\r\n            var json = '[' + commandQueue.join(',') + ']';\r\n            commandQueue.length = 0;\r\n            return json;\r\n        };\r\n\r\n        iOSExec.nativeCallback = function(callbackId, status, message, keepCallback) {\r\n            return iOSExec.nativeEvalAndFetch(function() {\r\n                var success = status === 0 || status === 1;\r\n                var args = convertMessageToArgsNativeToJs(message);\r\n                cordova.callbackFromNative(callbackId, success, status, args, keepCallback);\r\n            });\r\n        };\r\n\r\n        iOSExec.nativeEvalAndFetch = function(func) {\r\n            // This shouldn't be nested, but better to be safe.\r\n            isInContextOfEvalJs++;\r\n            try {\r\n                func();\r\n                return iOSExec.nativeFetchMessages();\r\n            } finally {\r\n                isInContextOfEvalJs--;\r\n            }\r\n        };\r\n\r\n        module.exports = iOSExec;\r\n    });\r\n    \r\n    // file: src/common/init.js\r\n    define(\"cordova/init\", function(require, exports, module) {\r\n\r\n        var channel = require('cordova/channel');\r\n        var cordova = require('cordova');\r\n        var platform = require('cordova/platform');\r\n        var utils = require('cordova/utils');\r\n\r\n        var platformInitChannelsArray = [channel.onNativeReady];\r\n\r\n        function logUnfiredChannels(arr) {\r\n            for (var i = 0; i < arr.length; ++i) {\r\n                if (arr[i].state != 2) {\r\n                    console.log('Channel not fired: ' + arr[i].type);\r\n                }\r\n            }\r\n        }\r\n\r\n        window.setTimeout(function() {\r\n            if (channel.onDeviceReady.state != 2) {\r\n                console.log('deviceready has not fired after 5 seconds.');\r\n                logUnfiredChannels(platformInitChannelsArray);\r\n                logUnfiredChannels(channel.deviceReadyChannelsArray);\r\n            }}, 5000);\r\n\r\n        // Register pause, resume and deviceready channels as events on document.\r\n        channel.onPause = cordova.addDocumentEventHandler('pause');\r\n        channel.onResume = cordova.addDocumentEventHandler('resume');\r\n        channel.onActivated = cordova.addDocumentEventHandler('activated');\r\n        channel.onDeviceReady = cordova.addStickyDocumentEventHandler('deviceready');\r\n\r\n        // Listen for DOMContentLoaded and notify our channel subscribers.\r\n        if (document.readyState == 'complete' || document.readyState == 'interactive') {\r\n            channel.onDOMContentLoaded.fire();\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded',function() {\r\n                channel.onDOMContentLoaded.fire();\r\n            },false);\r\n\t    }\r\n\r\n        // _nativeReady is global variable that the native side can set\r\n        // to signify that the native code is ready. It is a global since\r\n        // it may be called before any cordova JS is ready.\r\n        if (window._nativeReady) {\r\n            channel.onNativeReady.fire();\r\n        }\r\n\r\n        // Call the platform-specific initialization.\r\n        platform.bootstrap && platform.bootstrap();\r\n        /**\r\n         * Create all cordova objects once native side is ready.\r\n         */\r\n        channel.join(function() {\r\n\r\n            // Fire event to notify that all objects are created\r\n            channel.onCordovaReady.fire();\r\n\r\n            // Fire onDeviceReady event once page has fully loaded, all\r\n            // constructors have run and cordova info has been received from native\r\n            // side.\r\n            channel.join(function() {\r\n                require('cordova').fireDocumentEvent('deviceready');\r\n            },\r\n            channel.deviceReadyChannelsArray);\r\n\r\n        },\r\n        platformInitChannelsArray);\r\n\r\n    });\r\n    define(\"cordova/platform\", function(require, exports, module) {\r\n        var system = '';\r\n        if(window.navigator.userAgent.match(/android/i)){\r\n            system = 'android';\r\n        }else if(window.navigator.userAgent.match(/iPhone|iPad/i)){\r\n            system = 'ios';\r\n        }\r\n        module.exports = {\r\n            id: system,\r\n            bootstrap: function(){\r\n                var channel = require('cordova/channel'),\r\n                    cordova = require('cordova'),\r\n                    exec = require('cordova/exec');\r\n                var APP_PLUGIN_NAME = \"CoreAndroid\"\r\n                if(system == 'android'){\r\n                    exec.init();\r\n                    channel.onCordovaReady.subscribe(function() {\r\n                    exec(onMessageFromNative, null, APP_PLUGIN_NAME, 'messageChannel', []);\r\n                    exec(null, null, APP_PLUGIN_NAME, \"show\", []);\r\n                });\r\n                }else{\r\n                    require('cordova/channel').onNativeReady.fire();\r\n                }\r\n            }\r\n        }\r\n        function onMessageFromNative(msg) {\r\n            var cordova = require('cordova');\r\n            var action = msg.action;\r\n\r\n            switch (action)\r\n            {\r\n                // Button events\r\n                case 'backbutton':\r\n                case 'menubutton':\r\n                case 'searchbutton':\r\n                // App life cycle events\r\n                case 'pause':\r\n                case 'resume':\r\n                // Volume events\r\n                case 'volumedownbutton':\r\n                case 'volumeupbutton':\r\n                    cordova.fireDocumentEvent(action);\r\n                    break;\r\n                default:\r\n                    throw new Error('Unknown event action ' + action);\r\n            }\r\n        }\r\n    });\r\n    // file: src/common/utils.js\r\n    define(\"cordova/utils\",function(require, exports, module) {\r\n\r\n        var utils = exports;\r\n        utils.typeName = function(val) {\r\n            return Object.prototype.toString.call(val).slice(8, -1);\r\n        };\r\n        /**\r\n         * Returns a wrapped version of the function\r\n         */\r\n        utils.close = function(context, func, params) {\r\n            return function() {\r\n                var args = params || arguments;\r\n                return func.apply(context, args);\r\n            };\r\n        };\r\n\r\n    });\r\n    define('cordova/Bridge',function(require, exports, module){\r\n        var exec = require('cordova/exec')\r\n        cordova.exec = exec\r\n        var Bridge = {}\r\n        Bridge = {\r\n            isLogin:function(ok, fail) {\r\n                exec(ok, fail, \"Login\", \"isLogin\", []);\r\n            },\r\n            login: function(ok, fail, param){\r\n                // exec(ok, null, \"Login\", \"showLoginView\", []);\r\n                exec(function(){\r\n                    if(param.refresh){\r\n                        window.location.reload();\r\n                        ok();\r\n                    }else{\r\n                        ok();\r\n                    }\r\n                }, null, \"Login\", \"showLoginView\", [])                \r\n            },\r\n            getUserInfo:function(ok, fail){\r\n                exec(ok, fail, \"Login\", \"getUserInfo\", []);  \r\n            },\r\n            toast:function(ok, fail, args) {\r\n                exec(ok, fail, \"View\", \"toast\", [args]);\r\n            },\r\n            callShareComp:function(ok, fail, args){\r\n                exec(ok, fail, \"Share\", \"showNativeShareComponent\", [args]);\r\n            },\r\n            fetch: function(ok, fail, args){\r\n                exec(ok, fail, \"Network\", \"sendRequest\", [args]);\r\n            },\r\n            popWindow:function(){\r\n                exec(null, null, \"Route\", \"close\", []);\r\n            },\r\n            pushWindow:function(ok, fail, args){\r\n                exec(ok, fail, \"Route\", \"open\", [args]);\r\n            },\r\n            setHeadBar:function(ok, fail, args){\r\n                exec(ok, fail, \"View\", \"initTitleBar\", [args]);\r\n            },\r\n            getLocation:function(ok, fail){\r\n                exec(ok,fail,\"Location\",\"getInfo\",[])\r\n            },\r\n            getDeviceId:function(ok, fail){\r\n                exec(ok,fail,\"Device1\",\"getInfo\",[])\r\n            },\r\n            // add\r\n            showLoadingComp:function(ok, fail,args){\r\n                exec(ok, fail, \"View\", \"showLoading\", [args]);\r\n            },\r\n            hideLoadingComp:function(ok, fail){\r\n                exec(ok, fail, \"View\", \"hideLoading\", []);\r\n            },\r\n            showErrorComp:function(ok,fail,args){\r\n                exec(ok, fail, \"View\", \"showErrorView\", [args]);\r\n            },\r\n            hideErrorComp:function(ok, fail){\r\n                exec(ok, fail, \"View\", \"hideErrorView\", []);\r\n            }\r\n        }\r\n        module.exports = Bridge\r\n    })\r\n\r\n    window.cordova = require('cordova');\r\n    // file: src/scripts/bootstrap.js\r\n    require('cordova/init');\r\n    \r\n    return require('cordova/Bridge')\r\n})();\n\n\n// WEBPACK FOOTER //\n// ./example/cordova.unit.less.js","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/buildin/module.js","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/buffer/index.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/buildin/global.js","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/base64-js/index.js","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ieee754/index.js","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/isarray/index.js"],"sourceRoot":""}